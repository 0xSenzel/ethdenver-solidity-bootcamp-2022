{"id":"59802f175a2e8ac7f62ff79063928f3c","_format":"hh-sol-build-info-1","solcVersion":"0.7.6","solcLongVersion":"0.7.6+commit.7338295f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"},"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.6.0;\n\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\n\nlibrary TransferHelper {\n    /// @notice Transfers tokens from the targeted address to the given destination\n    /// @notice Errors with 'STF' if transfer fails\n    /// @param token The contract address of the token to be transferred\n    /// @param from The originating address from which the tokens will be transferred\n    /// @param to The destination address of the transfer\n    /// @param value The amount to be transferred\n    function safeTransferFrom(\n        address token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) =\n            token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF');\n    }\n\n    /// @notice Transfers tokens from msg.sender to a recipient\n    /// @dev Errors with ST if transfer fails\n    /// @param token The contract address of the token which will be transferred\n    /// @param to The recipient of the transfer\n    /// @param value The value of the transfer\n    function safeTransfer(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST');\n    }\n\n    /// @notice Approves the stipulated contract to spend the given allowance in the given token\n    /// @dev Errors with 'SA' if transfer fails\n    /// @param token The contract address of the token to be approved\n    /// @param to The target of the approval\n    /// @param value The amount of the given token the target will be allowed to spend\n    function safeApprove(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA');\n    }\n\n    /// @notice Transfers ETH to the recipient address\n    /// @dev Fails with `STE`\n    /// @param to The destination of the transfer\n    /// @param value The value to be transferred\n    function safeTransferETH(address to, uint256 value) internal {\n        (bool success, ) = to.call{value: value}(new bytes(0));\n        require(success, 'STE');\n    }\n}\n"},"contracts/swapDAI.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity =0.7.6;\r\npragma abicoder v2;\r\n\r\nimport '@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol';\r\nimport '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol';\r\n\r\ncontract SwapDAI {\r\n    // For the scope of these swap examples,\r\n    // we will detail the design considerations when using\r\n    // `exactInput`, `exactInputSingle`, `exactOutput`, and  `exactOutputSingle`.\r\n\r\n    // It should be noted that for the sake of these examples, we purposefully pass in the swap router instead of inherit the swap router for simplicity.\r\n    // More advanced example contracts will detail how to inherit the swap router safely.\r\n\r\n    ISwapRouter public immutable swapRouter;\r\n\r\n    // This example swaps DAI/WETH9 for single path swaps and DAI/USDC/WETH9 for multi path swaps.\r\n\r\n    address public constant DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F;\r\n    address public constant WETH9 = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\r\n    address public constant USDC = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48;\r\n    address public constant BUSD = 0x4Fabb145d64652a948d72533023f6E7A623C7C53;\r\n    address public constant BINANCE_ADDRESS = 0xDFd5293D8e347dFe59E90eFd55b2956a1343963d;\r\n\r\n    // For this example, we will set the pool fee to 0.3%.\r\n    //uint24 public constant poolFee = 3000;\r\n\r\n    constructor(ISwapRouter _swapRouter) {\r\n        swapRouter = _swapRouter;\r\n    }\r\n\r\n    /// @notice swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9\r\n    /// using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router.\r\n    /// @dev The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\r\n    /// @param amountIn The exact amount of DAI that will be swapped for WETH9.\r\n    /// @return amountOut The amount of WETH9 received.\r\n    function swapExactInputSingle(uint256 amountIn, address tokenIn, address tokenOut, uint24 poolFee) external returns (uint256 amountOut) {\r\n        // msg.sender must approve this contract\r\n\r\n        // Transfer the specified amount of DAI to this contract.\r\n        TransferHelper.safeTransferFrom(tokenIn, msg.sender , address(this), amountIn);\r\n\r\n        // Approve the router to spend DAI.\r\n        TransferHelper.safeApprove(tokenIn, address(swapRouter), amountIn);\r\n\r\n        // Naively set amountOutMinimum to 0. In production, use an oracle or other data source to choose a safer value for amountOutMinimum.\r\n        // We also set the sqrtPriceLimitx96 to be 0 to ensure we swap our exact input amount.\r\n        ISwapRouter.ExactInputSingleParams memory params =\r\n            ISwapRouter.ExactInputSingleParams({\r\n                tokenIn: tokenIn,\r\n                tokenOut: tokenOut,\r\n                fee: poolFee,\r\n                recipient: msg.sender,\r\n                deadline: block.timestamp,\r\n                amountIn: amountIn,\r\n                amountOutMinimum: 0,\r\n                sqrtPriceLimitX96: 0\r\n            });\r\n\r\n        // The call to `exactInputSingle` executes the swap.\r\n        amountOut = swapRouter.exactInputSingle(params);\r\n        return amountOut;\r\n    }\r\n\r\n    /// @notice swapExactOutputSingle swaps a minimum possible amount of DAI for a fixed amount of WETH.\r\n    /// @dev The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable,\r\n    /// the calling address will need to approve for a slightly higher amount, anticipating some variance.\r\n    /// @param amountOut The exact amount of WETH9 to receive from the swap.\r\n    /// @param amountInMaximum The amount of DAI we are willing to spend to receive the specified amount of WETH9.\r\n    /// @return amountIn The amount of DAI actually spent in the swap.\r\n    function swapExactOutputSingle(uint256 amountOut, uint256 amountInMaximum, uint24 poolFee) external returns (uint256 amountIn) {\r\n        // Transfer the specified amount of DAI to this contract.\r\n        TransferHelper.safeTransferFrom(DAI, msg.sender, address(this), amountInMaximum);\r\n\r\n        // Approve the router to spend the specifed `amountInMaximum` of DAI.\r\n        // In production, you should choose the maximum amount to spend based on oracles or other data sources to acheive a better swap.\r\n        TransferHelper.safeApprove(DAI, address(swapRouter), amountInMaximum);\r\n\r\n        ISwapRouter.ExactOutputSingleParams memory params =\r\n            ISwapRouter.ExactOutputSingleParams({\r\n                tokenIn: DAI,\r\n                tokenOut: WETH9,\r\n                fee: poolFee,\r\n                recipient: msg.sender,\r\n                deadline: block.timestamp,\r\n                amountOut: amountOut,\r\n                amountInMaximum: amountInMaximum,\r\n                sqrtPriceLimitX96: 0\r\n            });\r\n\r\n        // Executes the swap returning the amountIn needed to spend to receive the desired amountOut.\r\n        amountIn = swapRouter.exactOutputSingle(params);\r\n\r\n        // For exact output swaps, the amountInMaximum may not have all been spent.\r\n        // If the actual amount spent (amountIn) is less than the specified maximum amount, we must refund the msg.sender and approve the swapRouter to spend 0.\r\n        if (amountIn < amountInMaximum) {\r\n            TransferHelper.safeApprove(DAI, address(swapRouter), 0);\r\n            TransferHelper.safeTransfer(DAI, msg.sender, amountInMaximum - amountIn);\r\n        }\r\n    }\r\n}"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[77]},"id":78,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"33:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"58:70:0","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":77,"linearizedBaseContracts":[77],"name":"IERC20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"152:66:0","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":8,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nodeType":"FunctionDefinition","parameters":{"id":4,"nodeType":"ParameterList","parameters":[],"src":"243:2:0"},"returnParameters":{"id":7,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8,"src":"269:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5,"name":"uint256","nodeType":"ElementaryTypeName","src":"269:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"268:9:0"},"scope":77,"src":"223:55:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"284:72:0","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":16,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nodeType":"FunctionDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":16,"src":"380:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"380:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"379:17:0"},"returnParameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":16,"src":"420:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"420:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"419:9:0"},"scope":77,"src":"361:68:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":17,"nodeType":"StructuredDocumentation","src":"435:209:0","text":" @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":26,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":26,"src":"667:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18,"name":"address","nodeType":"ElementaryTypeName","src":"667:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":21,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":26,"src":"686:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20,"name":"uint256","nodeType":"ElementaryTypeName","src":"686:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"666:35:0"},"returnParameters":{"id":25,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":26,"src":"720:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":23,"name":"bool","nodeType":"ElementaryTypeName","src":"720:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"719:6:0"},"scope":77,"src":"649:77:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":27,"nodeType":"StructuredDocumentation","src":"732:264:0","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":36,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":32,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":36,"src":"1020:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28,"name":"address","nodeType":"ElementaryTypeName","src":"1020:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":31,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":36,"src":"1035:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":30,"name":"address","nodeType":"ElementaryTypeName","src":"1035:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1019:32:0"},"returnParameters":{"id":35,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":36,"src":"1075:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":33,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1074:9:0"},"scope":77,"src":"1001:83:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":37,"nodeType":"StructuredDocumentation","src":"1090:642:0","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":46,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":46,"src":"1754:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1754:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":46,"src":"1771:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40,"name":"uint256","nodeType":"ElementaryTypeName","src":"1771:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:33:0"},"returnParameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":46,"src":"1805:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":43,"name":"bool","nodeType":"ElementaryTypeName","src":"1805:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1804:6:0"},"scope":77,"src":"1737:74:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":47,"nodeType":"StructuredDocumentation","src":"1817:296:0","text":" @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":58,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":54,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":58,"src":"2140:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"2140:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":51,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":58,"src":"2156:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50,"name":"address","nodeType":"ElementaryTypeName","src":"2156:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":53,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":58,"src":"2175:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":52,"name":"uint256","nodeType":"ElementaryTypeName","src":"2175:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2139:51:0"},"returnParameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":58,"src":"2209:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":55,"name":"bool","nodeType":"ElementaryTypeName","src":"2209:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2208:6:0"},"scope":77,"src":"2118:97:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"2221:158:0","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":67,"name":"Transfer","nodeType":"EventDefinition","parameters":{"id":66,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61,"indexed":true,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":67,"src":"2399:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60,"name":"address","nodeType":"ElementaryTypeName","src":"2399:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":63,"indexed":true,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":67,"src":"2421:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"2421:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":65,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":67,"src":"2441:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":64,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2398:57:0"},"src":"2384:72:0"},{"anonymous":false,"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"2462:148:0","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":76,"name":"Approval","nodeType":"EventDefinition","parameters":{"id":75,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"indexed":true,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":76,"src":"2630:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69,"name":"address","nodeType":"ElementaryTypeName","src":"2630:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":72,"indexed":true,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":76,"src":"2653:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":71,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":74,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":76,"src":"2678:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":73,"name":"uint256","nodeType":"ElementaryTypeName","src":"2678:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2629:63:0"},"src":"2615:78:0"}],"scope":78,"src":"129:2566:0"}],"src":"33:2663:0"},"id":0},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","exportedSymbols":{"IUniswapV3SwapCallback":[91]},"id":92,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":79,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:1"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"71:144:1","text":"@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"},"fullyImplemented":false,"id":91,"linearizedBaseContracts":[91],"name":"IUniswapV3SwapCallback","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"254:898:1","text":"@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"},"functionSelector":"fa461e33","id":90,"implemented":false,"kind":"function","modifiers":[],"name":"uniswapV3SwapCallback","nodeType":"FunctionDefinition","parameters":{"id":88,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"amount0Delta","nodeType":"VariableDeclaration","scope":90,"src":"1197:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":82,"name":"int256","nodeType":"ElementaryTypeName","src":"1197:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":85,"mutability":"mutable","name":"amount1Delta","nodeType":"VariableDeclaration","scope":90,"src":"1226:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":84,"name":"int256","nodeType":"ElementaryTypeName","src":"1226:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":87,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":90,"src":"1255:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":86,"name":"bytes","nodeType":"ElementaryTypeName","src":"1255:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1187:93:1"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"1289:0:1"},"scope":91,"src":"1157:133:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":92,"src":"215:1077:1"}],"src":"45:1248:1"},"id":1},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"ast":{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","exportedSymbols":{"ISwapRouter":[187],"IUniswapV3SwapCallback":[91]},"id":188,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":93,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"45:24:2"},{"id":94,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"70:19:2"},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","file":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","id":95,"nodeType":"ImportDirective","scope":188,"sourceUnit":92,"src":"91:83:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":97,"name":"IUniswapV3SwapCallback","nodeType":"UserDefinedTypeName","referencedDeclaration":91,"src":"305:22:2","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3SwapCallback_$91","typeString":"contract IUniswapV3SwapCallback"}},"id":98,"nodeType":"InheritanceSpecifier","src":"305:22:2"}],"contractDependencies":[91],"contractKind":"interface","documentation":{"id":96,"nodeType":"StructuredDocumentation","src":"176:104:2","text":"@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"},"fullyImplemented":false,"id":187,"linearizedBaseContracts":[187,91],"name":"ISwapRouter","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ISwapRouter.ExactInputSingleParams","id":115,"members":[{"constant":false,"id":100,"mutability":"mutable","name":"tokenIn","nodeType":"VariableDeclaration","scope":115,"src":"374:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":99,"name":"address","nodeType":"ElementaryTypeName","src":"374:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":102,"mutability":"mutable","name":"tokenOut","nodeType":"VariableDeclaration","scope":115,"src":"399:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":101,"name":"address","nodeType":"ElementaryTypeName","src":"399:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":104,"mutability":"mutable","name":"fee","nodeType":"VariableDeclaration","scope":115,"src":"425:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":103,"name":"uint24","nodeType":"ElementaryTypeName","src":"425:6:2","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":106,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":115,"src":"445:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":105,"name":"address","nodeType":"ElementaryTypeName","src":"445:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":108,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","scope":115,"src":"472:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":107,"name":"uint256","nodeType":"ElementaryTypeName","src":"472:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":110,"mutability":"mutable","name":"amountIn","nodeType":"VariableDeclaration","scope":115,"src":"498:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":109,"name":"uint256","nodeType":"ElementaryTypeName","src":"498:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":112,"mutability":"mutable","name":"amountOutMinimum","nodeType":"VariableDeclaration","scope":115,"src":"524:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":111,"name":"uint256","nodeType":"ElementaryTypeName","src":"524:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":114,"mutability":"mutable","name":"sqrtPriceLimitX96","nodeType":"VariableDeclaration","scope":115,"src":"558:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":113,"name":"uint160","nodeType":"ElementaryTypeName","src":"558:7:2","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"ExactInputSingleParams","nodeType":"StructDefinition","scope":187,"src":"334:256:2","visibility":"public"},{"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"596:250:2","text":"@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"},"functionSelector":"414bf389","id":123,"implemented":false,"kind":"function","modifiers":[],"name":"exactInputSingle","nodeType":"FunctionDefinition","parameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":123,"src":"877:38:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$115_calldata_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"},"typeName":{"id":117,"name":"ExactInputSingleParams","nodeType":"UserDefinedTypeName","referencedDeclaration":115,"src":"877:22:2","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$115_storage_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"}},"visibility":"internal"}],"src":"876:40:2"},"returnParameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"amountOut","nodeType":"VariableDeclaration","scope":123,"src":"943:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":120,"name":"uint256","nodeType":"ElementaryTypeName","src":"943:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"942:19:2"},"scope":187,"src":"851:111:2","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactInputParams","id":134,"members":[{"constant":false,"id":125,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","scope":134,"src":"1002:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":124,"name":"bytes","nodeType":"ElementaryTypeName","src":"1002:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":127,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":134,"src":"1022:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":126,"name":"address","nodeType":"ElementaryTypeName","src":"1022:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":129,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","scope":134,"src":"1049:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":128,"name":"uint256","nodeType":"ElementaryTypeName","src":"1049:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":131,"mutability":"mutable","name":"amountIn","nodeType":"VariableDeclaration","scope":134,"src":"1075:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":130,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"amountOutMinimum","nodeType":"VariableDeclaration","scope":134,"src":"1101:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":132,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ExactInputParams","nodeType":"StructDefinition","scope":187,"src":"968:164:2","visibility":"public"},{"documentation":{"id":135,"nodeType":"StructuredDocumentation","src":"1138:273:2","text":"@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"},"functionSelector":"c04b8d59","id":142,"implemented":false,"kind":"function","modifiers":[],"name":"exactInput","nodeType":"FunctionDefinition","parameters":{"id":138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":137,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":142,"src":"1436:32:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$134_calldata_ptr","typeString":"struct ISwapRouter.ExactInputParams"},"typeName":{"id":136,"name":"ExactInputParams","nodeType":"UserDefinedTypeName","referencedDeclaration":134,"src":"1436:16:2","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$134_storage_ptr","typeString":"struct ISwapRouter.ExactInputParams"}},"visibility":"internal"}],"src":"1435:34:2"},"returnParameters":{"id":141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":140,"mutability":"mutable","name":"amountOut","nodeType":"VariableDeclaration","scope":142,"src":"1496:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":139,"name":"uint256","nodeType":"ElementaryTypeName","src":"1496:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:19:2"},"scope":187,"src":"1416:99:2","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactOutputSingleParams","id":159,"members":[{"constant":false,"id":144,"mutability":"mutable","name":"tokenIn","nodeType":"VariableDeclaration","scope":159,"src":"1562:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":143,"name":"address","nodeType":"ElementaryTypeName","src":"1562:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":146,"mutability":"mutable","name":"tokenOut","nodeType":"VariableDeclaration","scope":159,"src":"1587:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"1587:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":148,"mutability":"mutable","name":"fee","nodeType":"VariableDeclaration","scope":159,"src":"1613:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":147,"name":"uint24","nodeType":"ElementaryTypeName","src":"1613:6:2","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":150,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":159,"src":"1633:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":149,"name":"address","nodeType":"ElementaryTypeName","src":"1633:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":152,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","scope":159,"src":"1660:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":151,"name":"uint256","nodeType":"ElementaryTypeName","src":"1660:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":154,"mutability":"mutable","name":"amountOut","nodeType":"VariableDeclaration","scope":159,"src":"1686:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":153,"name":"uint256","nodeType":"ElementaryTypeName","src":"1686:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":156,"mutability":"mutable","name":"amountInMaximum","nodeType":"VariableDeclaration","scope":159,"src":"1713:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":155,"name":"uint256","nodeType":"ElementaryTypeName","src":"1713:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":158,"mutability":"mutable","name":"sqrtPriceLimitX96","nodeType":"VariableDeclaration","scope":159,"src":"1746:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":157,"name":"uint160","nodeType":"ElementaryTypeName","src":"1746:7:2","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"ExactOutputSingleParams","nodeType":"StructDefinition","scope":187,"src":"1521:257:2","visibility":"public"},{"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"1784:250:2","text":"@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"},"functionSelector":"db3e2198","id":167,"implemented":false,"kind":"function","modifiers":[],"name":"exactOutputSingle","nodeType":"FunctionDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":167,"src":"2066:39:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$159_calldata_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams"},"typeName":{"id":161,"name":"ExactOutputSingleParams","nodeType":"UserDefinedTypeName","referencedDeclaration":159,"src":"2066:23:2","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$159_storage_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams"}},"visibility":"internal"}],"src":"2065:41:2"},"returnParameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":165,"mutability":"mutable","name":"amountIn","nodeType":"VariableDeclaration","scope":167,"src":"2133:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":164,"name":"uint256","nodeType":"ElementaryTypeName","src":"2133:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2132:18:2"},"scope":187,"src":"2039:112:2","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactOutputParams","id":178,"members":[{"constant":false,"id":169,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","scope":178,"src":"2192:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":168,"name":"bytes","nodeType":"ElementaryTypeName","src":"2192:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":178,"src":"2212:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"2212:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":173,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","scope":178,"src":"2239:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":172,"name":"uint256","nodeType":"ElementaryTypeName","src":"2239:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"amountOut","nodeType":"VariableDeclaration","scope":178,"src":"2265:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":174,"name":"uint256","nodeType":"ElementaryTypeName","src":"2265:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":177,"mutability":"mutable","name":"amountInMaximum","nodeType":"VariableDeclaration","scope":178,"src":"2292:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":176,"name":"uint256","nodeType":"ElementaryTypeName","src":"2292:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ExactOutputParams","nodeType":"StructDefinition","scope":187,"src":"2157:165:2","visibility":"public"},{"documentation":{"id":179,"nodeType":"StructuredDocumentation","src":"2328:284:2","text":"@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"},"functionSelector":"f28c0498","id":186,"implemented":false,"kind":"function","modifiers":[],"name":"exactOutput","nodeType":"FunctionDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":186,"src":"2638:33:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputParams_$178_calldata_ptr","typeString":"struct ISwapRouter.ExactOutputParams"},"typeName":{"id":180,"name":"ExactOutputParams","nodeType":"UserDefinedTypeName","referencedDeclaration":178,"src":"2638:17:2","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputParams_$178_storage_ptr","typeString":"struct ISwapRouter.ExactOutputParams"}},"visibility":"internal"}],"src":"2637:35:2"},"returnParameters":{"id":185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":184,"mutability":"mutable","name":"amountIn","nodeType":"VariableDeclaration","scope":186,"src":"2699:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":183,"name":"uint256","nodeType":"ElementaryTypeName","src":"2699:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2698:18:2"},"scope":187,"src":"2617:100:2","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":188,"src":"280:2439:2"}],"src":"45:2675:2"},"id":2},"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol":{"ast":{"absolutePath":"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol","exportedSymbols":{"IERC20":[77],"TransferHelper":[358]},"id":359,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":189,"literals":["solidity",">=","0.6",".0"],"nodeType":"PragmaDirective","src":"45:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":190,"nodeType":"ImportDirective","scope":359,"sourceUnit":78,"src":"71:56:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":358,"linearizedBaseContracts":[358],"name":"TransferHelper","nodeType":"ContractDefinition","nodes":[{"body":{"id":238,"nodeType":"Block","src":"690:229:3","statements":[{"assignments":[203,205],"declarations":[{"constant":false,"id":203,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":238,"src":"701:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":202,"name":"bool","nodeType":"ElementaryTypeName","src":"701:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":205,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":238,"src":"715:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":204,"name":"bytes","nodeType":"ElementaryTypeName","src":"715:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":218,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":210,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"782:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$77_$","typeString":"type(contract IERC20)"}},"id":211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":58,"src":"782:19:3","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function IERC20.transferFrom(address,address,uint256) returns (bool)"}},"id":212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"782:28:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":213,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"812:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":214,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"818:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"822:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":208,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"759:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"759:22:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"759:69:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":206,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"748:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"748:10:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"748:81:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"700:129:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":220,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"847:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":221,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"859:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"859:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"874:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"859:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":227,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"890:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"897:4:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":228,"name":"bool","nodeType":"ElementaryTypeName","src":"897:4:3","typeDescriptions":{}}}],"id":230,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"896:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":225,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"879:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"879:10:3","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"879:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"859:44:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":233,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"858:46:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"847:57:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"535446","id":235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"906:5:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86","typeString":"literal_string \"STF\""},"value":"STF"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86","typeString":"literal_string \"STF\""}],"id":219,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"839:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"839:73:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":237,"nodeType":"ExpressionStatement","src":"839:73:3"}]},"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"158:398:3","text":"@notice Transfers tokens from the targeted address to the given destination\n @notice Errors with 'STF' if transfer fails\n @param token The contract address of the token to be transferred\n @param from The originating address from which the tokens will be transferred\n @param to The destination address of the transfer\n @param value The amount to be transferred"},"id":239,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nodeType":"FunctionDefinition","parameters":{"id":200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":239,"src":"596:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"596:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":239,"src":"619:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"619:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":239,"src":"641:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"641:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":239,"src":"661:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":198,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"586:94:3"},"returnParameters":{"id":201,"nodeType":"ParameterList","parameters":[],"src":"690:0:3"},"scope":358,"src":"561:358:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":284,"nodeType":"Block","src":"1314:206:3","statements":[{"assignments":[250,252],"declarations":[{"constant":false,"id":250,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":284,"src":"1325:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":249,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":252,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":284,"src":"1339:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":251,"name":"bytes","nodeType":"ElementaryTypeName","src":"1339:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":264,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":257,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"1394:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$77_$","typeString":"type(contract IERC20)"}},"id":258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":26,"src":"1394:15:3","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function IERC20.transfer(address,uint256) returns (bool)"}},"id":259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1394:24:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":260,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"1420:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"1424:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":255,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1371:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1371:22:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1371:59:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":253,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"1360:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"1360:10:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1360:71:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1324:107:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":266,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":250,"src":"1449:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":267,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"1461:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1461:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1476:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1461:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":273,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"1492:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1499:4:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":274,"name":"bool","nodeType":"ElementaryTypeName","src":"1499:4:3","typeDescriptions":{}}}],"id":276,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1498:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":271,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1481:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"1481:10:3","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1481:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1461:44:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":279,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1460:46:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1449:57:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5354","id":281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1508:4:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca","typeString":"literal_string \"ST\""},"value":"ST"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca","typeString":"literal_string \"ST\""}],"id":265,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1441:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1441:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":283,"nodeType":"ExpressionStatement","src":"1441:72:3"}]},"documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"925:281:3","text":"@notice Transfers tokens from msg.sender to a recipient\n @dev Errors with ST if transfer fails\n @param token The contract address of the token which will be transferred\n @param to The recipient of the transfer\n @param value The value of the transfer"},"id":285,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nodeType":"FunctionDefinition","parameters":{"id":247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":242,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":285,"src":"1242:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":241,"name":"address","nodeType":"ElementaryTypeName","src":"1242:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":244,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":285,"src":"1265:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":243,"name":"address","nodeType":"ElementaryTypeName","src":"1265:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":246,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":285,"src":"1285:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":245,"name":"uint256","nodeType":"ElementaryTypeName","src":"1285:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1232:72:3"},"returnParameters":{"id":248,"nodeType":"ParameterList","parameters":[],"src":"1314:0:3"},"scope":358,"src":"1211:309:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":330,"nodeType":"Block","src":"1975:205:3","statements":[{"assignments":[296,298],"declarations":[{"constant":false,"id":296,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":330,"src":"1986:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":295,"name":"bool","nodeType":"ElementaryTypeName","src":"1986:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":298,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":330,"src":"2000:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":297,"name":"bytes","nodeType":"ElementaryTypeName","src":"2000:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":310,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":303,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"2055:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$77_$","typeString":"type(contract IERC20)"}},"id":304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":46,"src":"2055:14:3","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function IERC20.approve(address,uint256) returns (bool)"}},"id":305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2055:23:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":306,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"2080:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"2084:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":301,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2032:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2032:22:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2032:58:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":299,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"2021:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2021:10:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2021:70:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1985:106:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":312,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"2109:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":313,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"2121:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2121:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2136:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2121:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":319,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"2152:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2159:4:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":320,"name":"bool","nodeType":"ElementaryTypeName","src":"2159:4:3","typeDescriptions":{}}}],"id":322,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2158:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":317,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2141:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"2141:10:3","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2141:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2121:44:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":325,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2120:46:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2109:57:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5341","id":327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2168:4:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa","typeString":"literal_string \"SA\""},"value":"SA"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa","typeString":"literal_string \"SA\""}],"id":311,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2101:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2101:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":329,"nodeType":"ExpressionStatement","src":"2101:72:3"}]},"documentation":{"id":286,"nodeType":"StructuredDocumentation","src":"1526:342:3","text":"@notice Approves the stipulated contract to spend the given allowance in the given token\n @dev Errors with 'SA' if transfer fails\n @param token The contract address of the token to be approved\n @param to The target of the approval\n @param value The amount of the given token the target will be allowed to spend"},"id":331,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nodeType":"FunctionDefinition","parameters":{"id":293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":288,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":331,"src":"1903:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":287,"name":"address","nodeType":"ElementaryTypeName","src":"1903:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":290,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":331,"src":"1926:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":289,"name":"address","nodeType":"ElementaryTypeName","src":"1926:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":292,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":331,"src":"1946:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":291,"name":"uint256","nodeType":"ElementaryTypeName","src":"1946:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1893:72:3"},"returnParameters":{"id":294,"nodeType":"ParameterList","parameters":[],"src":"1975:0:3"},"scope":358,"src":"1873:307:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":356,"nodeType":"Block","src":"2431:104:3","statements":[{"assignments":[340,null],"declarations":[{"constant":false,"id":340,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":356,"src":"2442:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":339,"name":"bool","nodeType":"ElementaryTypeName","src":"2442:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":350,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2492:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2482:9:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":345,"name":"bytes","nodeType":"ElementaryTypeName","src":"2486:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2482:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":341,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"2460:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2460:7:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"2475:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2460:21:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2460:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2441:54:3"},{"expression":{"arguments":[{"id":352,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"2513:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"535445","id":353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2522:5:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4","typeString":"literal_string \"STE\""},"value":"STE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4","typeString":"literal_string \"STE\""}],"id":351,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2505:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2505:23:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":355,"nodeType":"ExpressionStatement","src":"2505:23:3"}]},"documentation":{"id":332,"nodeType":"StructuredDocumentation","src":"2186:179:3","text":"@notice Transfers ETH to the recipient address\n @dev Fails with `STE`\n @param to The destination of the transfer\n @param value The value to be transferred"},"id":357,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferETH","nodeType":"FunctionDefinition","parameters":{"id":337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":334,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":357,"src":"2395:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"2395:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":336,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":357,"src":"2407:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":335,"name":"uint256","nodeType":"ElementaryTypeName","src":"2407:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2394:27:3"},"returnParameters":{"id":338,"nodeType":"ParameterList","parameters":[],"src":"2431:0:3"},"scope":358,"src":"2370:165:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":359,"src":"129:2408:3"}],"src":"45:2493:3"},"id":3},"contracts/swapDAI.sol":{"ast":{"absolutePath":"contracts/swapDAI.sol","exportedSymbols":{"IERC20":[77],"ISwapRouter":[187],"IUniswapV3SwapCallback":[91],"SwapDAI":[546],"TransferHelper":[358]},"id":547,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":360,"literals":["solidity","=","0.7",".6"],"nodeType":"PragmaDirective","src":"33:23:4"},{"id":361,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"58:19:4"},{"absolutePath":"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol","file":"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol","id":362,"nodeType":"ImportDirective","scope":547,"sourceUnit":359,"src":"81:70:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","file":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","id":363,"nodeType":"ImportDirective","scope":547,"sourceUnit":188,"src":"153:68:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":546,"linearizedBaseContracts":[546],"name":"SwapDAI","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"c31c9c07","id":365,"mutability":"immutable","name":"swapRouter","nodeType":"VariableDeclaration","scope":546,"src":"688:39:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$187","typeString":"contract ISwapRouter"},"typeName":{"id":364,"name":"ISwapRouter","nodeType":"UserDefinedTypeName","referencedDeclaration":187,"src":"688:11:4","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$187","typeString":"contract ISwapRouter"}},"visibility":"public"},{"constant":true,"functionSelector":"e0bab4c4","id":368,"mutability":"constant","name":"DAI","nodeType":"VariableDeclaration","scope":546,"src":"838:72:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":366,"name":"address","nodeType":"ElementaryTypeName","src":"838:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307836423137353437344538393039344334344461393862393534456564654143343935323731643046","id":367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"868:42:4","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"value":"0x6B175474E89094C44Da98b954EedeAC495271d0F"},"visibility":"public"},{"constant":true,"functionSelector":"4aa4a4fc","id":371,"mutability":"constant","name":"WETH9","nodeType":"VariableDeclaration","scope":546,"src":"917:74:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":369,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307843303261614133396232323346453844304130653543344632376541443930383343373536436332","id":370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"949:42:4","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"value":"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"},"visibility":"public"},{"constant":true,"functionSelector":"89a30271","id":374,"mutability":"constant","name":"USDC","nodeType":"VariableDeclaration","scope":546,"src":"998:73:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":372,"name":"address","nodeType":"ElementaryTypeName","src":"998:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307841306238363939316336323138623336633164313944346132653945623063453336303665423438","id":373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1029:42:4","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"value":"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"},"visibility":"public"},{"constant":true,"functionSelector":"484f4ea9","id":377,"mutability":"constant","name":"BUSD","nodeType":"VariableDeclaration","scope":546,"src":"1078:73:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":375,"name":"address","nodeType":"ElementaryTypeName","src":"1078:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307834466162623134356436343635326139343864373235333330323366364537413632334337433533","id":376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1109:42:4","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"value":"0x4Fabb145d64652a948d72533023f6E7A623C7C53"},"visibility":"public"},{"constant":true,"functionSelector":"4c840bef","id":380,"mutability":"constant","name":"BINANCE_ADDRESS","nodeType":"VariableDeclaration","scope":546,"src":"1158:84:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":378,"name":"address","nodeType":"ElementaryTypeName","src":"1158:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307844466435323933443865333437644665353945393065466435356232393536613133343339363364","id":379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1200:42:4","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"value":"0xDFd5293D8e347dFe59E90eFd55b2956a1343963d"},"visibility":"public"},{"body":{"id":389,"nodeType":"Block","src":"1396:43:4","statements":[{"expression":{"id":387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":385,"name":"swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"1407:10:4","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$187","typeString":"contract ISwapRouter"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":386,"name":"_swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"1420:11:4","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$187","typeString":"contract ISwapRouter"}},"src":"1407:24:4","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$187","typeString":"contract ISwapRouter"}},"id":388,"nodeType":"ExpressionStatement","src":"1407:24:4"}]},"id":390,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"mutability":"mutable","name":"_swapRouter","nodeType":"VariableDeclaration","scope":390,"src":"1371:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$187","typeString":"contract ISwapRouter"},"typeName":{"id":381,"name":"ISwapRouter","nodeType":"UserDefinedTypeName","referencedDeclaration":187,"src":"1371:11:4","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$187","typeString":"contract ISwapRouter"}},"visibility":"internal"}],"src":"1370:25:4"},"returnParameters":{"id":384,"nodeType":"ParameterList","parameters":[],"src":"1396:0:4"},"scope":546,"src":"1359:80:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":455,"nodeType":"Block","src":"2052:1157:4","statements":[{"expression":{"arguments":[{"id":407,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"2214:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":408,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2223:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2223:10:4","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"arguments":[{"id":412,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2244:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_SwapDAI_$546","typeString":"contract SwapDAI"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SwapDAI_$546","typeString":"contract SwapDAI"}],"id":411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2236:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":410,"name":"address","nodeType":"ElementaryTypeName","src":"2236:7:4","typeDescriptions":{}}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2236:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":414,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"2251:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":404,"name":"TransferHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"2182:14:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TransferHelper_$358_$","typeString":"type(library TransferHelper)"}},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":239,"src":"2182:31:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2182:78:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":416,"nodeType":"ExpressionStatement","src":"2182:78:4"},{"expression":{"arguments":[{"id":420,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"2345:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":423,"name":"swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"2362:10:4","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$187","typeString":"contract ISwapRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISwapRouter_$187","typeString":"contract ISwapRouter"}],"id":422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2354:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":421,"name":"address","nodeType":"ElementaryTypeName","src":"2354:7:4","typeDescriptions":{}}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2354:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":425,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"2375:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":417,"name":"TransferHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"2318:14:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TransferHelper_$358_$","typeString":"type(library TransferHelper)"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeApprove","nodeType":"MemberAccess","referencedDeclaration":331,"src":"2318:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2318:66:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":427,"nodeType":"ExpressionStatement","src":"2318:66:4"},{"assignments":[431],"declarations":[{"constant":false,"id":431,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":455,"src":"2636:48:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$115_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"},"typeName":{"id":430,"name":"ISwapRouter.ExactInputSingleParams","nodeType":"UserDefinedTypeName","referencedDeclaration":115,"src":"2636:34:4","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$115_storage_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"}},"visibility":"internal"}],"id":445,"initialValue":{"arguments":[{"id":434,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"2763:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":435,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"2799:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":436,"name":"poolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"2831:7:4","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"expression":{"id":437,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2868:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2868:10:4","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"expression":{"id":439,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2907:5:4","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"2907:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":441,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"2951:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2996:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3035:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":432,"name":"ISwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"2700:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISwapRouter_$187_$","typeString":"type(contract ISwapRouter)"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ExactInputSingleParams","nodeType":"MemberAccess","referencedDeclaration":115,"src":"2700:34:4","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ExactInputSingleParams_$115_storage_ptr_$","typeString":"type(struct ISwapRouter.ExactInputSingleParams storage pointer)"}},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["tokenIn","tokenOut","fee","recipient","deadline","amountIn","amountOutMinimum","sqrtPriceLimitX96"],"nodeType":"FunctionCall","src":"2700:352:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$115_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}},"nodeType":"VariableDeclarationStatement","src":"2636:416:4"},{"expression":{"id":451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":446,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"3127:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":449,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"3167:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$115_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ExactInputSingleParams_$115_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}],"expression":{"id":447,"name":"swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"3139:10:4","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$187","typeString":"contract ISwapRouter"}},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exactInputSingle","nodeType":"MemberAccess","referencedDeclaration":123,"src":"3139:27:4","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_struct$_ExactInputSingleParams_$115_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"}},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3139:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3127:47:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":452,"nodeType":"ExpressionStatement","src":"3127:47:4"},{"expression":{"id":453,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"3192:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":403,"id":454,"nodeType":"Return","src":"3185:16:4"}]},"documentation":{"id":391,"nodeType":"StructuredDocumentation","src":"1447:463:4","text":"@notice swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9\n using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router.\n @dev The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\n @param amountIn The exact amount of DAI that will be swapped for WETH9.\n @return amountOut The amount of WETH9 received."},"functionSelector":"bd13338c","id":456,"implemented":true,"kind":"function","modifiers":[],"name":"swapExactInputSingle","nodeType":"FunctionDefinition","parameters":{"id":400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"mutability":"mutable","name":"amountIn","nodeType":"VariableDeclaration","scope":456,"src":"1946:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":392,"name":"uint256","nodeType":"ElementaryTypeName","src":"1946:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":395,"mutability":"mutable","name":"tokenIn","nodeType":"VariableDeclaration","scope":456,"src":"1964:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"1964:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":397,"mutability":"mutable","name":"tokenOut","nodeType":"VariableDeclaration","scope":456,"src":"1981:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":396,"name":"address","nodeType":"ElementaryTypeName","src":"1981:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":399,"mutability":"mutable","name":"poolFee","nodeType":"VariableDeclaration","scope":456,"src":"1999:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":398,"name":"uint24","nodeType":"ElementaryTypeName","src":"1999:6:4","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"1945:69:4"},"returnParameters":{"id":403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":402,"mutability":"mutable","name":"amountOut","nodeType":"VariableDeclaration","scope":456,"src":"2033:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":401,"name":"uint256","nodeType":"ElementaryTypeName","src":"2033:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2032:19:4"},"scope":546,"src":"1916:1293:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":544,"nodeType":"Block","src":"3972:1527:4","statements":[{"expression":{"arguments":[{"id":471,"name":"DAI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"4082:3:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":472,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4087:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4087:10:4","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"arguments":[{"id":476,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4107:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_SwapDAI_$546","typeString":"contract SwapDAI"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SwapDAI_$546","typeString":"contract SwapDAI"}],"id":475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4099:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":474,"name":"address","nodeType":"ElementaryTypeName","src":"4099:7:4","typeDescriptions":{}}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4099:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":478,"name":"amountInMaximum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"4114:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":468,"name":"TransferHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"4050:14:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TransferHelper_$358_$","typeString":"type(library TransferHelper)"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":239,"src":"4050:31:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4050:80:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":480,"nodeType":"ExpressionStatement","src":"4050:80:4"},{"expression":{"arguments":[{"id":484,"name":"DAI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"4387:3:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":487,"name":"swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"4400:10:4","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$187","typeString":"contract ISwapRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISwapRouter_$187","typeString":"contract ISwapRouter"}],"id":486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4392:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":485,"name":"address","nodeType":"ElementaryTypeName","src":"4392:7:4","typeDescriptions":{}}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4392:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":489,"name":"amountInMaximum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"4413:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":481,"name":"TransferHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"4360:14:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TransferHelper_$358_$","typeString":"type(library TransferHelper)"}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeApprove","nodeType":"MemberAccess","referencedDeclaration":331,"src":"4360:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4360:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":491,"nodeType":"ExpressionStatement","src":"4360:69:4"},{"assignments":[495],"declarations":[{"constant":false,"id":495,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":544,"src":"4442:49:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$159_memory_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams"},"typeName":{"id":494,"name":"ISwapRouter.ExactOutputSingleParams","nodeType":"UserDefinedTypeName","referencedDeclaration":159,"src":"4442:35:4","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$159_storage_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams"}},"visibility":"internal"}],"id":509,"initialValue":{"arguments":[{"id":498,"name":"DAI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"4571:3:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":499,"name":"WETH9","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"4603:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":500,"name":"poolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"4632:7:4","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"expression":{"id":501,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4669:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4669:10:4","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"expression":{"id":503,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4708:5:4","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"4708:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":505,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"4753:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":506,"name":"amountInMaximum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"4798:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4851:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":496,"name":"ISwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"4507:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISwapRouter_$187_$","typeString":"type(contract ISwapRouter)"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ExactOutputSingleParams","nodeType":"MemberAccess","referencedDeclaration":159,"src":"4507:35:4","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ExactOutputSingleParams_$159_storage_ptr_$","typeString":"type(struct ISwapRouter.ExactOutputSingleParams storage pointer)"}},"id":508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["tokenIn","tokenOut","fee","recipient","deadline","amountOut","amountInMaximum","sqrtPriceLimitX96"],"nodeType":"FunctionCall","src":"4507:361:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$159_memory_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams memory"}},"nodeType":"VariableDeclarationStatement","src":"4442:426:4"},{"expression":{"id":515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":510,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"4984:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":513,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"5024:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$159_memory_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$159_memory_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams memory"}],"expression":{"id":511,"name":"swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"4995:10:4","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$187","typeString":"contract ISwapRouter"}},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exactOutputSingle","nodeType":"MemberAccess","referencedDeclaration":167,"src":"4995:28:4","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_struct$_ExactOutputSingleParams_$159_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct ISwapRouter.ExactOutputSingleParams memory) payable external returns (uint256)"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4995:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4984:47:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":516,"nodeType":"ExpressionStatement","src":"4984:47:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":517,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"5295:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":518,"name":"amountInMaximum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"5306:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5295:26:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":543,"nodeType":"IfStatement","src":"5291:201:4","trueBody":{"id":542,"nodeType":"Block","src":"5323:169:4","statements":[{"expression":{"arguments":[{"id":523,"name":"DAI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"5365:3:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":526,"name":"swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"5378:10:4","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$187","typeString":"contract ISwapRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISwapRouter_$187","typeString":"contract ISwapRouter"}],"id":525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5370:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"5370:7:4","typeDescriptions":{}}},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5370:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5391:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":520,"name":"TransferHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"5338:14:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TransferHelper_$358_$","typeString":"type(library TransferHelper)"}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeApprove","nodeType":"MemberAccess","referencedDeclaration":331,"src":"5338:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5338:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":530,"nodeType":"ExpressionStatement","src":"5338:55:4"},{"expression":{"arguments":[{"id":534,"name":"DAI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"5436:3:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":535,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5441:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5441:10:4","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":537,"name":"amountInMaximum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"5453:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":538,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"5471:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5453:26:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":531,"name":"TransferHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"5408:14:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TransferHelper_$358_$","typeString":"type(library TransferHelper)"}},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":285,"src":"5408:27:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5408:72:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":541,"nodeType":"ExpressionStatement","src":"5408:72:4"}]}}]},"documentation":{"id":457,"nodeType":"StructuredDocumentation","src":"3217:622:4","text":"@notice swapExactOutputSingle swaps a minimum possible amount of DAI for a fixed amount of WETH.\n @dev The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable,\n the calling address will need to approve for a slightly higher amount, anticipating some variance.\n @param amountOut The exact amount of WETH9 to receive from the swap.\n @param amountInMaximum The amount of DAI we are willing to spend to receive the specified amount of WETH9.\n @return amountIn The amount of DAI actually spent in the swap."},"functionSelector":"df2133b3","id":545,"implemented":true,"kind":"function","modifiers":[],"name":"swapExactOutputSingle","nodeType":"FunctionDefinition","parameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":459,"mutability":"mutable","name":"amountOut","nodeType":"VariableDeclaration","scope":545,"src":"3876:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":458,"name":"uint256","nodeType":"ElementaryTypeName","src":"3876:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":461,"mutability":"mutable","name":"amountInMaximum","nodeType":"VariableDeclaration","scope":545,"src":"3895:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":460,"name":"uint256","nodeType":"ElementaryTypeName","src":"3895:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":463,"mutability":"mutable","name":"poolFee","nodeType":"VariableDeclaration","scope":545,"src":"3920:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":462,"name":"uint24","nodeType":"ElementaryTypeName","src":"3920:6:4","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"3875:60:4"},"returnParameters":{"id":467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":466,"mutability":"mutable","name":"amountIn","nodeType":"VariableDeclaration","scope":545,"src":"3954:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":465,"name":"uint256","nodeType":"ElementaryTypeName","src":"3954:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3953:18:4"},"scope":546,"src":"3845:1654:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":547,"src":"225:5277:4"}],"src":"33:5469:4"},"id":4}},"contracts":{"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbd74f587ab9b9711801baf667db1426e4a03fd2d7f15af33e0e0d0394e7cef76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d0913dfbfce90d170df0d496ad7596c0778518e5fa7aba6c32562522546f66b\",\"dweb:/ipfs/QmR6B8nLj2PJf5e1JWD9Nk7ErkAwkqUwadCnvE82FJr1RU\"]}},\"version\":1}"}},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"IUniswapV3SwapCallback":{"abi":[{"inputs":[{"internalType":"int256","name":"amount0Delta","type":"int256"},{"internalType":"int256","name":"amount1Delta","type":"int256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"uniswapV3SwapCallback","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"uniswapV3SwapCallback(int256,int256,bytes)":"fa461e33"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}"}},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"ISwapRouter":{"abi":[{"inputs":[{"components":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"}],"internalType":"struct ISwapRouter.ExactInputParams","name":"params","type":"tuple"}],"name":"exactInput","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct ISwapRouter.ExactInputSingleParams","name":"params","type":"tuple"}],"name":"exactInputSingle","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMaximum","type":"uint256"}],"internalType":"struct ISwapRouter.ExactOutputParams","name":"params","type":"tuple"}],"name":"exactOutput","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMaximum","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct ISwapRouter.ExactOutputSingleParams","name":"params","type":"tuple"}],"name":"exactOutputSingle","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"int256","name":"amount0Delta","type":"int256"},{"internalType":"int256","name":"amount1Delta","type":"int256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"uniswapV3SwapCallback","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"exactInput((bytes,address,uint256,uint256,uint256))":"c04b8d59","exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":"414bf389","exactOutput((bytes,address,uint256,uint256,uint256))":"f28c0498","exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":"db3e2198","uniswapV3SwapCallback(int256,int256,bytes)":"fa461e33"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}"}},"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol":{"TransferHelper":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dfefdc75dfdbad341bd4d9c6b364419218d04447e979a7b1da0a4e10b4dad8c464736f6c63430007060033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0xEF 0xDC PUSH22 0xDFDBAD341BD4D9C6B364419218D04447E979A7B1DA0A 0x4E LT 0xB4 0xDA 0xD8 0xC4 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ","sourceMap":"129:2408:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dfefdc75dfdbad341bd4d9c6b364419218d04447e979a7b1da0a4e10b4dad8c464736f6c63430007060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0xEF 0xDC PUSH22 0xDFDBAD341BD4D9C6B364419218D04447E979A7B1DA0A 0x4E LT 0xB4 0xDA 0xD8 0xC4 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ","sourceMap":"129:2408:3:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbd74f587ab9b9711801baf667db1426e4a03fd2d7f15af33e0e0d0394e7cef76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d0913dfbfce90d170df0d496ad7596c0778518e5fa7aba6c32562522546f66b\",\"dweb:/ipfs/QmR6B8nLj2PJf5e1JWD9Nk7ErkAwkqUwadCnvE82FJr1RU\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]}},\"version\":1}"}},"contracts/swapDAI.sol":{"SwapDAI":{"abi":[{"inputs":[{"internalType":"contract ISwapRouter","name":"_swapRouter","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"BINANCE_ADDRESS","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"BUSD","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DAI","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"USDC","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WETH9","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"poolFee","type":"uint24"}],"name":"swapExactInputSingle","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMaximum","type":"uint256"},{"internalType":"uint24","name":"poolFee","type":"uint24"}],"name":"swapExactOutputSingle","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"swapRouter","outputs":[{"internalType":"contract ISwapRouter","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1040:5","statements":[{"body":{"nodeType":"YulBlock","src":"89:99:5","statements":[{"nodeType":"YulAssignment","src":"99:22:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"114:6:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"108:5:5"},"nodeType":"YulFunctionCall","src":"108:13:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"99:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"176:5:5"}],"functionName":{"name":"validator_revert_t_contract$_ISwapRouter_$187","nodeType":"YulIdentifier","src":"130:45:5"},"nodeType":"YulFunctionCall","src":"130:52:5"},"nodeType":"YulExpressionStatement","src":"130:52:5"}]},"name":"abi_decode_t_contract$_ISwapRouter_$187_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"67:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"75:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"83:5:5","type":""}],"src":"7:181:5"},{"body":{"nodeType":"YulBlock","src":"290:226:5","statements":[{"body":{"nodeType":"YulBlock","src":"336:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"345:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"348:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"338:6:5"},"nodeType":"YulFunctionCall","src":"338:12:5"},"nodeType":"YulExpressionStatement","src":"338:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"311:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"320:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"307:3:5"},"nodeType":"YulFunctionCall","src":"307:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"332:2:5","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"303:3:5"},"nodeType":"YulFunctionCall","src":"303:32:5"},"nodeType":"YulIf","src":"300:2:5"},{"nodeType":"YulBlock","src":"362:147:5","statements":[{"nodeType":"YulVariableDeclaration","src":"377:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"391:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"381:6:5","type":""}]},{"nodeType":"YulAssignment","src":"406:93:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"471:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"482:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"467:3:5"},"nodeType":"YulFunctionCall","src":"467:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"491:7:5"}],"functionName":{"name":"abi_decode_t_contract$_ISwapRouter_$187_fromMemory","nodeType":"YulIdentifier","src":"416:50:5"},"nodeType":"YulFunctionCall","src":"416:83:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"406:6:5"}]}]}]},"name":"abi_decode_tuple_t_contract$_ISwapRouter_$187_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"260:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"271:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"283:6:5","type":""}],"src":"194:322:5"},{"body":{"nodeType":"YulBlock","src":"567:51:5","statements":[{"nodeType":"YulAssignment","src":"577:35:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"606:5:5"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"588:17:5"},"nodeType":"YulFunctionCall","src":"588:24:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"577:7:5"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"549:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"559:7:5","type":""}],"src":"522:96:5"},{"body":{"nodeType":"YulBlock","src":"688:51:5","statements":[{"nodeType":"YulAssignment","src":"698:35:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"727:5:5"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"709:17:5"},"nodeType":"YulFunctionCall","src":"709:24:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"698:7:5"}]}]},"name":"cleanup_t_contract$_ISwapRouter_$187","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"670:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"680:7:5","type":""}],"src":"624:115:5"},{"body":{"nodeType":"YulBlock","src":"790:81:5","statements":[{"nodeType":"YulAssignment","src":"800:65:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"815:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"822:42:5","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"811:3:5"},"nodeType":"YulFunctionCall","src":"811:54:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"800:7:5"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"772:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"782:7:5","type":""}],"src":"745:126:5"},{"body":{"nodeType":"YulBlock","src":"939:98:5","statements":[{"body":{"nodeType":"YulBlock","src":"1015:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1024:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1027:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1017:6:5"},"nodeType":"YulFunctionCall","src":"1017:12:5"},"nodeType":"YulExpressionStatement","src":"1017:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"962:5:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1006:5:5"}],"functionName":{"name":"cleanup_t_contract$_ISwapRouter_$187","nodeType":"YulIdentifier","src":"969:36:5"},"nodeType":"YulFunctionCall","src":"969:43:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"959:2:5"},"nodeType":"YulFunctionCall","src":"959:54:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"952:6:5"},"nodeType":"YulFunctionCall","src":"952:62:5"},"nodeType":"YulIf","src":"949:2:5"}]},"name":"validator_revert_t_contract$_ISwapRouter_$187","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"932:5:5","type":""}],"src":"877:160:5"}]},"contents":"{\n\n    function abi_decode_t_contract$_ISwapRouter_$187_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ISwapRouter_$187(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ISwapRouter_$187_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ISwapRouter_$187_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ISwapRouter_$187(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_contract$_ISwapRouter_$187(value) {\n        if iszero(eq(value, cleanup_t_contract$_ISwapRouter_$187(value))) { revert(0, 0) }\n    }\n\n}\n","id":5,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a06040523480156200001157600080fd5b50604051620011cf380380620011cf83398181016040528101906200003791906200008c565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050506200011a565b600081519050620000868162000100565b92915050565b6000602082840312156200009f57600080fd5b6000620000af8482850162000075565b91505092915050565b6000620000c582620000e0565b9050919050565b6000620000d982620000b8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200010b81620000cc565b81146200011757600080fd5b50565b60805160601c61107e620001516000398061021552806102d9528061038f52806103ed52806104d852806105a5525061107e6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063bd13338c1161005b578063bd13338c14610105578063c31c9c0714610135578063df2133b314610153578063e0bab4c41461018357610088565b8063484f4ea91461008d5780634aa4a4fc146100ab5780634c840bef146100c957806389a30271146100e7575b600080fd5b6100956101a1565b6040516100a29190610f0b565b60405180910390f35b6100b36101b9565b6040516100c09190610f0b565b60405180910390f35b6100d16101d1565b6040516100de9190610f0b565b60405180910390f35b6100ef6101e9565b6040516100fc9190610f0b565b60405180910390f35b61011f600480360381019061011a9190610cac565b610201565b60405161012c9190610f79565b60405180910390f35b61013d61038d565b60405161014a9190610f26565b60405180910390f35b61016d60048036038101906101689190610d0f565b6103b1565b60405161017a9190610f79565b60405180910390f35b61018b6105f5565b6040516101989190610f0b565b60405180910390f35b734fabb145d64652a948d72533023f6e7a623c7c5381565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b73dfd5293d8e347dfe59e90efd55b2956a1343963d81565b73a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4881565b600061020f8433308861060d565b61023a847f00000000000000000000000000000000000000000000000000000000000000008761082d565b60006040518061010001604052808673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018462ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200187815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b81526004016103309190610f41565b602060405180830381600087803b15801561034a57600080fd5b505af115801561035e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103829190610c83565b915050949350505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006103d3736b175474e89094c44da98b954eedeac495271d0f33308661060d565b610412736b175474e89094c44da98b954eedeac495271d0f7f00000000000000000000000000000000000000000000000000000000000000008561082d565b6000604051806101000160405280736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff16815260200173c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff1681526020018462ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff168152602001428152602001868152602001858152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663db3e2198826040518263ffffffff1660e01b815260040161052f9190610f5d565b602060405180830381600087803b15801561054957600080fd5b505af115801561055d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105819190610c83565b9150838210156105ed576105cb736b175474e89094c44da98b954eedeac495271d0f7f0000000000000000000000000000000000000000000000000000000000000000600061082d565b6105ec736b175474e89094c44da98b954eedeac495271d0f33848703610a2e565b5b509392505050565b736b175474e89094c44da98b954eedeac495271d0f81565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b868686604051602401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b6020831061070c57805182526020820191506020810190506020830392506106e9565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461076e576040519150601f19603f3d011682016040523d82523d6000602084013e610773565b606091505b50915091508180156107b357506000815114806107b257508080602001905160208110156107a057600080fd5b81019080805190602001909291905050505b5b610825576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260038152602001807f535446000000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b505050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b8585604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b6020831061090e57805182526020820191506020810190506020830392506108eb565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610970576040519150601f19603f3d011682016040523d82523d6000602084013e610975565b606091505b50915091508180156109b557506000815114806109b457508080602001905160208110156109a257600080fd5b81019080805190602001909291905050505b5b610a27576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260028152602001807f534100000000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b5050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b8585604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b60208310610b0f5780518252602082019150602081019050602083039250610aec565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610b71576040519150601f19603f3d011682016040523d82523d6000602084013e610b76565b606091505b5091509150818015610bb65750600081511480610bb55750808060200190516020811015610ba357600080fd5b81019080805190602001909291905050505b5b610c28576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260028152602001807f535400000000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b5050505050565b600081359050610c3e81611003565b92915050565b600081359050610c538161101a565b92915050565b600081359050610c6881611031565b92915050565b600081519050610c7d81611031565b92915050565b600060208284031215610c9557600080fd5b6000610ca384828501610c6e565b91505092915050565b60008060008060808587031215610cc257600080fd5b6000610cd087828801610c59565b9450506020610ce187828801610c2f565b9350506040610cf287828801610c2f565b9250506060610d0387828801610c44565b91505092959194509250565b600080600060608486031215610d2457600080fd5b6000610d3286828701610c59565b9350506020610d4386828701610c59565b9250506040610d5486828701610c44565b9150509250925092565b610d6781610f94565b82525050565b610d7681610f94565b82525050565b610d8581610fdf565b82525050565b61010082016000820151610da26000850182610d5e565b506020820151610db56020850182610d5e565b506040820151610dc86040850182610ede565b506060820151610ddb6060850182610d5e565b506080820151610dee6080850182610eed565b5060a0820151610e0160a0850182610eed565b5060c0820151610e1460c0850182610eed565b5060e0820151610e2760e0850182610ecf565b50505050565b61010082016000820151610e446000850182610d5e565b506020820151610e576020850182610d5e565b506040820151610e6a6040850182610ede565b506060820151610e7d6060850182610d5e565b506080820151610e906080850182610eed565b5060a0820151610ea360a0850182610eed565b5060c0820151610eb660c0850182610eed565b5060e0820151610ec960e0850182610ecf565b50505050565b610ed881610fa6565b82525050565b610ee781610fc6565b82525050565b610ef681610fd5565b82525050565b610f0581610fd5565b82525050565b6000602082019050610f206000830184610d6d565b92915050565b6000602082019050610f3b6000830184610d7c565b92915050565b600061010082019050610f576000830184610d8b565b92915050565b600061010082019050610f736000830184610e2d565b92915050565b6000602082019050610f8e6000830184610efc565b92915050565b6000610f9f82610fa6565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6000819050919050565b6000610fea82610ff1565b9050919050565b6000610ffc82610fa6565b9050919050565b61100c81610f94565b811461101757600080fd5b50565b61102381610fc6565b811461102e57600080fd5b50565b61103a81610fd5565b811461104557600080fd5b5056fea2646970667358221220d357c05b091fbcb719f594e5b5062cade8ca1a853db4f33274f40938231d865364736f6c63430007060033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x11CF CODESIZE SUB DUP1 PUSH3 0x11CF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x8C JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP POP PUSH3 0x11A JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x86 DUP2 PUSH3 0x100 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0xAF DUP5 DUP3 DUP6 ADD PUSH3 0x75 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xC5 DUP3 PUSH3 0xE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD9 DUP3 PUSH3 0xB8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x10B DUP2 PUSH3 0xCC JUMP JUMPDEST DUP2 EQ PUSH3 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0x107E PUSH3 0x151 PUSH1 0x0 CODECOPY DUP1 PUSH2 0x215 MSTORE DUP1 PUSH2 0x2D9 MSTORE DUP1 PUSH2 0x38F MSTORE DUP1 PUSH2 0x3ED MSTORE DUP1 PUSH2 0x4D8 MSTORE DUP1 PUSH2 0x5A5 MSTORE POP PUSH2 0x107E PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBD13338C GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xBD13338C EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xDF2133B3 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0xE0BAB4C4 EQ PUSH2 0x183 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x484F4EA9 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x4AA4A4FC EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x4C840BEF EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0xE7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB3 PUSH2 0x1B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD1 PUSH2 0x1D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDE SWAP2 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEF PUSH2 0x1E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFC SWAP2 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0xCAC JUMP JUMPDEST PUSH2 0x201 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0xF79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x38D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0xF26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0xD0F JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0xF79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH2 0x5F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH20 0x4FABB145D64652A948D72533023F6E7A623C7C53 DUP2 JUMP JUMPDEST PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 DUP2 JUMP JUMPDEST PUSH20 0xDFD5293D8E347DFE59E90EFD55B2956A1343963D DUP2 JUMP JUMPDEST PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20F DUP5 CALLER ADDRESS DUP9 PUSH2 0x60D JUMP JUMPDEST PUSH2 0x23A DUP5 PUSH32 0x0 DUP8 PUSH2 0x82D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x330 SWAP2 SWAP1 PUSH2 0xF41 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x34A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x35E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x382 SWAP2 SWAP1 PUSH2 0xC83 JUMP JUMPDEST SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D3 PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F CALLER ADDRESS DUP7 PUSH2 0x60D JUMP JUMPDEST PUSH2 0x412 PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F PUSH32 0x0 DUP6 PUSH2 0x82D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDB3E2198 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52F SWAP2 SWAP1 PUSH2 0xF5D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x549 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x55D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x581 SWAP2 SWAP1 PUSH2 0xC83 JUMP JUMPDEST SWAP2 POP DUP4 DUP3 LT ISZERO PUSH2 0x5ED JUMPI PUSH2 0x5CB PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F PUSH32 0x0 PUSH1 0x0 PUSH2 0x82D JUMP JUMPDEST PUSH2 0x5EC PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F CALLER DUP5 DUP8 SUB PUSH2 0xA2E JUMP JUMPDEST JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x70C JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x76E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x773 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x7B3 JUMPI POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x7B2 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP JUMPDEST JUMPDEST PUSH2 0x825 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5354460000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x90E JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x8EB JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x970 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x975 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x9B5 JUMPI POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x9B4 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP JUMPDEST JUMPDEST PUSH2 0xA27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5341000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xB0F JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0xAEC JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xB71 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB76 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xBB6 JUMPI POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0xBB5 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP JUMPDEST JUMPDEST PUSH2 0xC28 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5354000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC3E DUP2 PUSH2 0x1003 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC53 DUP2 PUSH2 0x101A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC68 DUP2 PUSH2 0x1031 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC7D DUP2 PUSH2 0x1031 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCA3 DUP5 DUP3 DUP6 ADD PUSH2 0xC6E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xCC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCD0 DUP8 DUP3 DUP9 ADD PUSH2 0xC59 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xCE1 DUP8 DUP3 DUP9 ADD PUSH2 0xC2F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0xCF2 DUP8 DUP3 DUP9 ADD PUSH2 0xC2F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0xD03 DUP8 DUP3 DUP9 ADD PUSH2 0xC44 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD32 DUP7 DUP3 DUP8 ADD PUSH2 0xC59 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xD43 DUP7 DUP3 DUP8 ADD PUSH2 0xC59 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xD54 DUP7 DUP3 DUP8 ADD PUSH2 0xC44 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xD67 DUP2 PUSH2 0xF94 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD76 DUP2 PUSH2 0xF94 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD85 DUP2 PUSH2 0xFDF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0xDA2 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0xD5E JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xDB5 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xD5E JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xDC8 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xEDE JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0xDDB PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0xD5E JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0xDEE PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0xEED JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0xE01 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0xEED JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0xE14 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0xEED JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0xE27 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0xECF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0xE44 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0xD5E JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xE57 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xD5E JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xE6A PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xEDE JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0xE7D PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0xD5E JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0xE90 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0xEED JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0xEA3 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0xEED JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0xEB6 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0xEED JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0xEC9 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0xECF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xED8 DUP2 PUSH2 0xFA6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xEE7 DUP2 PUSH2 0xFC6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xEF6 DUP2 PUSH2 0xFD5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF05 DUP2 PUSH2 0xFD5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF20 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD6D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF3B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0xF57 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD8B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0xF73 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF8E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF9F DUP3 PUSH2 0xFA6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFEA DUP3 PUSH2 0xFF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFC DUP3 PUSH2 0xFA6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x100C DUP2 PUSH2 0xF94 JUMP JUMPDEST DUP2 EQ PUSH2 0x1017 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1023 DUP2 PUSH2 0xFC6 JUMP JUMPDEST DUP2 EQ PUSH2 0x102E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x103A DUP2 PUSH2 0xFD5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1045 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 JUMPI 0xC0 JUMPDEST MULMOD 0x1F 0xBC 0xB7 NOT CREATE2 SWAP5 0xE5 0xB5 MOD 0x2C 0xAD 0xE8 0xCA BYTE DUP6 RETURNDATASIZE 0xB4 RETURN ORIGIN PUSH21 0xF40938231D865364736F6C63430007060033000000 ","sourceMap":"225:5277:4:-:0;;;1359:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1420:11;1407:24;;;;;;;;;;;;1359:80;225:5277;;7:181:5;;114:6;108:13;99:22;;130:52;176:5;130:52;:::i;:::-;89:99;;;;:::o;194:322::-;;332:2;320:9;311:7;307:23;303:32;300:2;;;348:1;345;338:12;300:2;391:1;416:83;491:7;482:6;471:9;467:22;416:83;:::i;:::-;406:93;;362:147;290:226;;;;:::o;522:96::-;;588:24;606:5;588:24;:::i;:::-;577:35;;567:51;;;:::o;624:115::-;;709:24;727:5;709:24;:::i;:::-;698:35;;688:51;;;:::o;745:126::-;;822:42;815:5;811:54;800:65;;790:81;;;:::o;877:160::-;969:43;1006:5;969:43;:::i;:::-;962:5;959:54;949:2;;1027:1;1024;1017:12;949:2;939:98;:::o;225:5277:4:-;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:9060:5","statements":[{"body":{"nodeType":"YulBlock","src":"59:87:5","statements":[{"nodeType":"YulAssignment","src":"69:29:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"91:6:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"78:12:5"},"nodeType":"YulFunctionCall","src":"78:20:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"69:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:5"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"107:26:5"},"nodeType":"YulFunctionCall","src":"107:33:5"},"nodeType":"YulExpressionStatement","src":"107:33:5"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"45:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:5","type":""}],"src":"7:139:5"},{"body":{"nodeType":"YulBlock","src":"203:86:5","statements":[{"nodeType":"YulAssignment","src":"213:29:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"235:6:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"222:12:5"},"nodeType":"YulFunctionCall","src":"222:20:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"213:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"277:5:5"}],"functionName":{"name":"validator_revert_t_uint24","nodeType":"YulIdentifier","src":"251:25:5"},"nodeType":"YulFunctionCall","src":"251:32:5"},"nodeType":"YulExpressionStatement","src":"251:32:5"}]},"name":"abi_decode_t_uint24","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"181:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"189:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"197:5:5","type":""}],"src":"152:137:5"},{"body":{"nodeType":"YulBlock","src":"347:87:5","statements":[{"nodeType":"YulAssignment","src":"357:29:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"379:6:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"366:12:5"},"nodeType":"YulFunctionCall","src":"366:20:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"357:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"422:5:5"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"395:26:5"},"nodeType":"YulFunctionCall","src":"395:33:5"},"nodeType":"YulExpressionStatement","src":"395:33:5"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"325:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"333:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"341:5:5","type":""}],"src":"295:139:5"},{"body":{"nodeType":"YulBlock","src":"503:80:5","statements":[{"nodeType":"YulAssignment","src":"513:22:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"528:6:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"522:5:5"},"nodeType":"YulFunctionCall","src":"522:13:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"513:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"571:5:5"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"544:26:5"},"nodeType":"YulFunctionCall","src":"544:33:5"},"nodeType":"YulExpressionStatement","src":"544:33:5"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"481:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"489:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"497:5:5","type":""}],"src":"440:143:5"},{"body":{"nodeType":"YulBlock","src":"666:207:5","statements":[{"body":{"nodeType":"YulBlock","src":"712:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"721:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"724:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"714:6:5"},"nodeType":"YulFunctionCall","src":"714:12:5"},"nodeType":"YulExpressionStatement","src":"714:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"687:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"696:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"683:3:5"},"nodeType":"YulFunctionCall","src":"683:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"708:2:5","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"679:3:5"},"nodeType":"YulFunctionCall","src":"679:32:5"},"nodeType":"YulIf","src":"676:2:5"},{"nodeType":"YulBlock","src":"738:128:5","statements":[{"nodeType":"YulVariableDeclaration","src":"753:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"767:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"757:6:5","type":""}]},{"nodeType":"YulAssignment","src":"782:74:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"828:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"839:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"824:3:5"},"nodeType":"YulFunctionCall","src":"824:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"848:7:5"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"792:31:5"},"nodeType":"YulFunctionCall","src":"792:64:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"782:6:5"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"636:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"647:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"659:6:5","type":""}],"src":"589:284:5"},{"body":{"nodeType":"YulBlock","src":"995:580:5","statements":[{"body":{"nodeType":"YulBlock","src":"1042:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1051:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1054:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1044:6:5"},"nodeType":"YulFunctionCall","src":"1044:12:5"},"nodeType":"YulExpressionStatement","src":"1044:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1016:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"1025:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1012:3:5"},"nodeType":"YulFunctionCall","src":"1012:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"1037:3:5","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1008:3:5"},"nodeType":"YulFunctionCall","src":"1008:33:5"},"nodeType":"YulIf","src":"1005:2:5"},{"nodeType":"YulBlock","src":"1068:117:5","statements":[{"nodeType":"YulVariableDeclaration","src":"1083:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"1097:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1087:6:5","type":""}]},{"nodeType":"YulAssignment","src":"1112:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1147:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"1158:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1143:3:5"},"nodeType":"YulFunctionCall","src":"1143:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1167:7:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1122:20:5"},"nodeType":"YulFunctionCall","src":"1122:53:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1112:6:5"}]}]},{"nodeType":"YulBlock","src":"1195:118:5","statements":[{"nodeType":"YulVariableDeclaration","src":"1210:16:5","value":{"kind":"number","nodeType":"YulLiteral","src":"1224:2:5","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1214:6:5","type":""}]},{"nodeType":"YulAssignment","src":"1240:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1275:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"1286:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1271:3:5"},"nodeType":"YulFunctionCall","src":"1271:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1295:7:5"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1250:20:5"},"nodeType":"YulFunctionCall","src":"1250:53:5"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1240:6:5"}]}]},{"nodeType":"YulBlock","src":"1323:118:5","statements":[{"nodeType":"YulVariableDeclaration","src":"1338:16:5","value":{"kind":"number","nodeType":"YulLiteral","src":"1352:2:5","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1342:6:5","type":""}]},{"nodeType":"YulAssignment","src":"1368:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1403:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"1414:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1399:3:5"},"nodeType":"YulFunctionCall","src":"1399:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1423:7:5"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1378:20:5"},"nodeType":"YulFunctionCall","src":"1378:53:5"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1368:6:5"}]}]},{"nodeType":"YulBlock","src":"1451:117:5","statements":[{"nodeType":"YulVariableDeclaration","src":"1466:16:5","value":{"kind":"number","nodeType":"YulLiteral","src":"1480:2:5","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1470:6:5","type":""}]},{"nodeType":"YulAssignment","src":"1496:62:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1530:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"1541:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1526:3:5"},"nodeType":"YulFunctionCall","src":"1526:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1550:7:5"}],"functionName":{"name":"abi_decode_t_uint24","nodeType":"YulIdentifier","src":"1506:19:5"},"nodeType":"YulFunctionCall","src":"1506:52:5"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1496:6:5"}]}]}]},"name":"abi_decode_tuple_t_uint256t_addresst_addresst_uint24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"941:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"952:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"964:6:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"972:6:5","type":""},{"name":"value2","nodeType":"YulTypedName","src":"980:6:5","type":""},{"name":"value3","nodeType":"YulTypedName","src":"988:6:5","type":""}],"src":"879:696:5"},{"body":{"nodeType":"YulBlock","src":"1680:451:5","statements":[{"body":{"nodeType":"YulBlock","src":"1726:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1735:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1738:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1728:6:5"},"nodeType":"YulFunctionCall","src":"1728:12:5"},"nodeType":"YulExpressionStatement","src":"1728:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1701:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"1710:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1697:3:5"},"nodeType":"YulFunctionCall","src":"1697:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"1722:2:5","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1693:3:5"},"nodeType":"YulFunctionCall","src":"1693:32:5"},"nodeType":"YulIf","src":"1690:2:5"},{"nodeType":"YulBlock","src":"1752:117:5","statements":[{"nodeType":"YulVariableDeclaration","src":"1767:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"1781:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1771:6:5","type":""}]},{"nodeType":"YulAssignment","src":"1796:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1831:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"1842:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1827:3:5"},"nodeType":"YulFunctionCall","src":"1827:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1851:7:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1806:20:5"},"nodeType":"YulFunctionCall","src":"1806:53:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1796:6:5"}]}]},{"nodeType":"YulBlock","src":"1879:118:5","statements":[{"nodeType":"YulVariableDeclaration","src":"1894:16:5","value":{"kind":"number","nodeType":"YulLiteral","src":"1908:2:5","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1898:6:5","type":""}]},{"nodeType":"YulAssignment","src":"1924:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1959:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"1970:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1955:3:5"},"nodeType":"YulFunctionCall","src":"1955:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1979:7:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1934:20:5"},"nodeType":"YulFunctionCall","src":"1934:53:5"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1924:6:5"}]}]},{"nodeType":"YulBlock","src":"2007:117:5","statements":[{"nodeType":"YulVariableDeclaration","src":"2022:16:5","value":{"kind":"number","nodeType":"YulLiteral","src":"2036:2:5","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2026:6:5","type":""}]},{"nodeType":"YulAssignment","src":"2052:62:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2086:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"2097:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2082:3:5"},"nodeType":"YulFunctionCall","src":"2082:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2106:7:5"}],"functionName":{"name":"abi_decode_t_uint24","nodeType":"YulIdentifier","src":"2062:19:5"},"nodeType":"YulFunctionCall","src":"2062:52:5"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2052:6:5"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1634:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1645:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1657:6:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1665:6:5","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1673:6:5","type":""}],"src":"1581:550:5"},{"body":{"nodeType":"YulBlock","src":"2192:53:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2209:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2232:5:5"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2214:17:5"},"nodeType":"YulFunctionCall","src":"2214:24:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2202:6:5"},"nodeType":"YulFunctionCall","src":"2202:37:5"},"nodeType":"YulExpressionStatement","src":"2202:37:5"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2180:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2187:3:5","type":""}],"src":"2137:108:5"},{"body":{"nodeType":"YulBlock","src":"2316:53:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2333:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2356:5:5"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2338:17:5"},"nodeType":"YulFunctionCall","src":"2338:24:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2326:6:5"},"nodeType":"YulFunctionCall","src":"2326:37:5"},"nodeType":"YulExpressionStatement","src":"2326:37:5"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2304:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2311:3:5","type":""}],"src":"2251:118:5"},{"body":{"nodeType":"YulBlock","src":"2459:85:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2476:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2531:5:5"}],"functionName":{"name":"convert_t_contract$_ISwapRouter_$187_to_t_address","nodeType":"YulIdentifier","src":"2481:49:5"},"nodeType":"YulFunctionCall","src":"2481:56:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2469:6:5"},"nodeType":"YulFunctionCall","src":"2469:69:5"},"nodeType":"YulExpressionStatement","src":"2469:69:5"}]},"name":"abi_encode_t_contract$_ISwapRouter_$187_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2447:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2454:3:5","type":""}],"src":"2375:169:5"},{"body":{"nodeType":"YulBlock","src":"2788:1479:5","statements":[{"nodeType":"YulVariableDeclaration","src":"2798:28:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2814:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"2819:6:5","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2810:3:5"},"nodeType":"YulFunctionCall","src":"2810:16:5"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"2802:4:5","type":""}]},{"nodeType":"YulBlock","src":"2836:167:5","statements":[{"nodeType":"YulVariableDeclaration","src":"2874:43:5","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2904:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"2911:4:5","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2900:3:5"},"nodeType":"YulFunctionCall","src":"2900:16:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2894:5:5"},"nodeType":"YulFunctionCall","src":"2894:23:5"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"2878:12:5","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"2964:12:5"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2982:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"2987:4:5","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2978:3:5"},"nodeType":"YulFunctionCall","src":"2978:14:5"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"2930:33:5"},"nodeType":"YulFunctionCall","src":"2930:63:5"},"nodeType":"YulExpressionStatement","src":"2930:63:5"}]},{"nodeType":"YulBlock","src":"3013:168:5","statements":[{"nodeType":"YulVariableDeclaration","src":"3052:43:5","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3082:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"3089:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3078:3:5"},"nodeType":"YulFunctionCall","src":"3078:16:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3072:5:5"},"nodeType":"YulFunctionCall","src":"3072:23:5"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3056:12:5","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3142:12:5"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3160:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"3165:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3156:3:5"},"nodeType":"YulFunctionCall","src":"3156:14:5"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"3108:33:5"},"nodeType":"YulFunctionCall","src":"3108:63:5"},"nodeType":"YulExpressionStatement","src":"3108:63:5"}]},{"nodeType":"YulBlock","src":"3191:161:5","statements":[{"nodeType":"YulVariableDeclaration","src":"3225:43:5","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3255:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"3262:4:5","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3251:3:5"},"nodeType":"YulFunctionCall","src":"3251:16:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3245:5:5"},"nodeType":"YulFunctionCall","src":"3245:23:5"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3229:12:5","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3313:12:5"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3331:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"3336:4:5","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3327:3:5"},"nodeType":"YulFunctionCall","src":"3327:14:5"}],"functionName":{"name":"abi_encode_t_uint24_to_t_uint24","nodeType":"YulIdentifier","src":"3281:31:5"},"nodeType":"YulFunctionCall","src":"3281:61:5"},"nodeType":"YulExpressionStatement","src":"3281:61:5"}]},{"nodeType":"YulBlock","src":"3362:169:5","statements":[{"nodeType":"YulVariableDeclaration","src":"3402:43:5","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3432:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"3439:4:5","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3428:3:5"},"nodeType":"YulFunctionCall","src":"3428:16:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3422:5:5"},"nodeType":"YulFunctionCall","src":"3422:23:5"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3406:12:5","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3492:12:5"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3510:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"3515:4:5","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3506:3:5"},"nodeType":"YulFunctionCall","src":"3506:14:5"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"3458:33:5"},"nodeType":"YulFunctionCall","src":"3458:63:5"},"nodeType":"YulExpressionStatement","src":"3458:63:5"}]},{"nodeType":"YulBlock","src":"3541:168:5","statements":[{"nodeType":"YulVariableDeclaration","src":"3580:43:5","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3610:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"3617:4:5","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3606:3:5"},"nodeType":"YulFunctionCall","src":"3606:16:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3600:5:5"},"nodeType":"YulFunctionCall","src":"3600:23:5"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3584:12:5","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3670:12:5"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3688:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"3693:4:5","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3684:3:5"},"nodeType":"YulFunctionCall","src":"3684:14:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3636:33:5"},"nodeType":"YulFunctionCall","src":"3636:63:5"},"nodeType":"YulExpressionStatement","src":"3636:63:5"}]},{"nodeType":"YulBlock","src":"3719:168:5","statements":[{"nodeType":"YulVariableDeclaration","src":"3758:43:5","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3788:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"3795:4:5","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3784:3:5"},"nodeType":"YulFunctionCall","src":"3784:16:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3778:5:5"},"nodeType":"YulFunctionCall","src":"3778:23:5"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3762:12:5","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3848:12:5"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3866:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"3871:4:5","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3862:3:5"},"nodeType":"YulFunctionCall","src":"3862:14:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3814:33:5"},"nodeType":"YulFunctionCall","src":"3814:63:5"},"nodeType":"YulExpressionStatement","src":"3814:63:5"}]},{"nodeType":"YulBlock","src":"3897:176:5","statements":[{"nodeType":"YulVariableDeclaration","src":"3944:43:5","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3974:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"3981:4:5","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3970:3:5"},"nodeType":"YulFunctionCall","src":"3970:16:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3964:5:5"},"nodeType":"YulFunctionCall","src":"3964:23:5"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3948:12:5","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"4034:12:5"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4052:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"4057:4:5","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4048:3:5"},"nodeType":"YulFunctionCall","src":"4048:14:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"4000:33:5"},"nodeType":"YulFunctionCall","src":"4000:63:5"},"nodeType":"YulExpressionStatement","src":"4000:63:5"}]},{"nodeType":"YulBlock","src":"4083:177:5","statements":[{"nodeType":"YulVariableDeclaration","src":"4131:43:5","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4161:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"4168:4:5","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4157:3:5"},"nodeType":"YulFunctionCall","src":"4157:16:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4151:5:5"},"nodeType":"YulFunctionCall","src":"4151:23:5"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"4135:12:5","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"4221:12:5"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4239:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"4244:4:5","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4235:3:5"},"nodeType":"YulFunctionCall","src":"4235:14:5"}],"functionName":{"name":"abi_encode_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"4187:33:5"},"nodeType":"YulFunctionCall","src":"4187:63:5"},"nodeType":"YulExpressionStatement","src":"4187:63:5"}]}]},"name":"abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2775:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2782:3:5","type":""}],"src":"2644:1623:5"},{"body":{"nodeType":"YulBlock","src":"4515:1479:5","statements":[{"nodeType":"YulVariableDeclaration","src":"4525:28:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4541:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"4546:6:5","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4537:3:5"},"nodeType":"YulFunctionCall","src":"4537:16:5"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"4529:4:5","type":""}]},{"nodeType":"YulBlock","src":"4563:167:5","statements":[{"nodeType":"YulVariableDeclaration","src":"4601:43:5","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4631:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"4638:4:5","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4627:3:5"},"nodeType":"YulFunctionCall","src":"4627:16:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4621:5:5"},"nodeType":"YulFunctionCall","src":"4621:23:5"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"4605:12:5","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"4691:12:5"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4709:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"4714:4:5","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4705:3:5"},"nodeType":"YulFunctionCall","src":"4705:14:5"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"4657:33:5"},"nodeType":"YulFunctionCall","src":"4657:63:5"},"nodeType":"YulExpressionStatement","src":"4657:63:5"}]},{"nodeType":"YulBlock","src":"4740:168:5","statements":[{"nodeType":"YulVariableDeclaration","src":"4779:43:5","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4809:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"4816:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4805:3:5"},"nodeType":"YulFunctionCall","src":"4805:16:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4799:5:5"},"nodeType":"YulFunctionCall","src":"4799:23:5"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"4783:12:5","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"4869:12:5"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4887:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"4892:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4883:3:5"},"nodeType":"YulFunctionCall","src":"4883:14:5"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"4835:33:5"},"nodeType":"YulFunctionCall","src":"4835:63:5"},"nodeType":"YulExpressionStatement","src":"4835:63:5"}]},{"nodeType":"YulBlock","src":"4918:161:5","statements":[{"nodeType":"YulVariableDeclaration","src":"4952:43:5","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4982:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"4989:4:5","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4978:3:5"},"nodeType":"YulFunctionCall","src":"4978:16:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4972:5:5"},"nodeType":"YulFunctionCall","src":"4972:23:5"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"4956:12:5","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"5040:12:5"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5058:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"5063:4:5","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5054:3:5"},"nodeType":"YulFunctionCall","src":"5054:14:5"}],"functionName":{"name":"abi_encode_t_uint24_to_t_uint24","nodeType":"YulIdentifier","src":"5008:31:5"},"nodeType":"YulFunctionCall","src":"5008:61:5"},"nodeType":"YulExpressionStatement","src":"5008:61:5"}]},{"nodeType":"YulBlock","src":"5089:169:5","statements":[{"nodeType":"YulVariableDeclaration","src":"5129:43:5","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5159:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"5166:4:5","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5155:3:5"},"nodeType":"YulFunctionCall","src":"5155:16:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5149:5:5"},"nodeType":"YulFunctionCall","src":"5149:23:5"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"5133:12:5","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"5219:12:5"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5237:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"5242:4:5","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5233:3:5"},"nodeType":"YulFunctionCall","src":"5233:14:5"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"5185:33:5"},"nodeType":"YulFunctionCall","src":"5185:63:5"},"nodeType":"YulExpressionStatement","src":"5185:63:5"}]},{"nodeType":"YulBlock","src":"5268:168:5","statements":[{"nodeType":"YulVariableDeclaration","src":"5307:43:5","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5337:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"5344:4:5","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5333:3:5"},"nodeType":"YulFunctionCall","src":"5333:16:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5327:5:5"},"nodeType":"YulFunctionCall","src":"5327:23:5"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"5311:12:5","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"5397:12:5"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5415:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"5420:4:5","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5411:3:5"},"nodeType":"YulFunctionCall","src":"5411:14:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5363:33:5"},"nodeType":"YulFunctionCall","src":"5363:63:5"},"nodeType":"YulExpressionStatement","src":"5363:63:5"}]},{"nodeType":"YulBlock","src":"5446:169:5","statements":[{"nodeType":"YulVariableDeclaration","src":"5486:43:5","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5516:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"5523:4:5","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5512:3:5"},"nodeType":"YulFunctionCall","src":"5512:16:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5506:5:5"},"nodeType":"YulFunctionCall","src":"5506:23:5"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"5490:12:5","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"5576:12:5"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5594:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"5599:4:5","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5590:3:5"},"nodeType":"YulFunctionCall","src":"5590:14:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5542:33:5"},"nodeType":"YulFunctionCall","src":"5542:63:5"},"nodeType":"YulExpressionStatement","src":"5542:63:5"}]},{"nodeType":"YulBlock","src":"5625:175:5","statements":[{"nodeType":"YulVariableDeclaration","src":"5671:43:5","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5701:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"5708:4:5","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5697:3:5"},"nodeType":"YulFunctionCall","src":"5697:16:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5691:5:5"},"nodeType":"YulFunctionCall","src":"5691:23:5"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"5675:12:5","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"5761:12:5"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5779:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"5784:4:5","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5775:3:5"},"nodeType":"YulFunctionCall","src":"5775:14:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5727:33:5"},"nodeType":"YulFunctionCall","src":"5727:63:5"},"nodeType":"YulExpressionStatement","src":"5727:63:5"}]},{"nodeType":"YulBlock","src":"5810:177:5","statements":[{"nodeType":"YulVariableDeclaration","src":"5858:43:5","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5888:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"5895:4:5","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5884:3:5"},"nodeType":"YulFunctionCall","src":"5884:16:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5878:5:5"},"nodeType":"YulFunctionCall","src":"5878:23:5"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"5862:12:5","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"5948:12:5"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5966:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"5971:4:5","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5962:3:5"},"nodeType":"YulFunctionCall","src":"5962:14:5"}],"functionName":{"name":"abi_encode_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"5914:33:5"},"nodeType":"YulFunctionCall","src":"5914:63:5"},"nodeType":"YulExpressionStatement","src":"5914:63:5"}]}]},"name":"abi_encode_t_struct$_ExactOutputSingleParams_$159_memory_ptr_to_t_struct$_ExactOutputSingleParams_$159_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4502:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4509:3:5","type":""}],"src":"4369:1625:5"},{"body":{"nodeType":"YulBlock","src":"6055:53:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6072:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6095:5:5"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"6077:17:5"},"nodeType":"YulFunctionCall","src":"6077:24:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6065:6:5"},"nodeType":"YulFunctionCall","src":"6065:37:5"},"nodeType":"YulExpressionStatement","src":"6065:37:5"}]},"name":"abi_encode_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6043:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6050:3:5","type":""}],"src":"6000:108:5"},{"body":{"nodeType":"YulBlock","src":"6167:52:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6184:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6206:5:5"}],"functionName":{"name":"cleanup_t_uint24","nodeType":"YulIdentifier","src":"6189:16:5"},"nodeType":"YulFunctionCall","src":"6189:23:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6177:6:5"},"nodeType":"YulFunctionCall","src":"6177:36:5"},"nodeType":"YulExpressionStatement","src":"6177:36:5"}]},"name":"abi_encode_t_uint24_to_t_uint24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6155:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6162:3:5","type":""}],"src":"6114:105:5"},{"body":{"nodeType":"YulBlock","src":"6280:53:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6297:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6320:5:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6302:17:5"},"nodeType":"YulFunctionCall","src":"6302:24:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6290:6:5"},"nodeType":"YulFunctionCall","src":"6290:37:5"},"nodeType":"YulExpressionStatement","src":"6290:37:5"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6268:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6275:3:5","type":""}],"src":"6225:108:5"},{"body":{"nodeType":"YulBlock","src":"6404:53:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6421:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6444:5:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6426:17:5"},"nodeType":"YulFunctionCall","src":"6426:24:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6414:6:5"},"nodeType":"YulFunctionCall","src":"6414:37:5"},"nodeType":"YulExpressionStatement","src":"6414:37:5"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6392:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6399:3:5","type":""}],"src":"6339:118:5"},{"body":{"nodeType":"YulBlock","src":"6561:124:5","statements":[{"nodeType":"YulAssignment","src":"6571:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6583:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"6594:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6579:3:5"},"nodeType":"YulFunctionCall","src":"6579:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6571:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6651:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6664:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"6675:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6660:3:5"},"nodeType":"YulFunctionCall","src":"6660:17:5"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6607:43:5"},"nodeType":"YulFunctionCall","src":"6607:71:5"},"nodeType":"YulExpressionStatement","src":"6607:71:5"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6533:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6545:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6556:4:5","type":""}],"src":"6463:222:5"},{"body":{"nodeType":"YulBlock","src":"6808:143:5","statements":[{"nodeType":"YulAssignment","src":"6818:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6830:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"6841:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6826:3:5"},"nodeType":"YulFunctionCall","src":"6826:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6818:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6917:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6930:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"6941:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6926:3:5"},"nodeType":"YulFunctionCall","src":"6926:17:5"}],"functionName":{"name":"abi_encode_t_contract$_ISwapRouter_$187_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6854:62:5"},"nodeType":"YulFunctionCall","src":"6854:90:5"},"nodeType":"YulExpressionStatement","src":"6854:90:5"}]},"name":"abi_encode_tuple_t_contract$_ISwapRouter_$187__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6780:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6792:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6803:4:5","type":""}],"src":"6691:260:5"},{"body":{"nodeType":"YulBlock","src":"7133:203:5","statements":[{"nodeType":"YulAssignment","src":"7143:27:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7155:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"7166:3:5","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7151:3:5"},"nodeType":"YulFunctionCall","src":"7151:19:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7143:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7302:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7315:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"7326:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7311:3:5"},"nodeType":"YulFunctionCall","src":"7311:17:5"}],"functionName":{"name":"abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7180:121:5"},"nodeType":"YulFunctionCall","src":"7180:149:5"},"nodeType":"YulExpressionStatement","src":"7180:149:5"}]},"name":"abi_encode_tuple_t_struct$_ExactInputSingleParams_$115_memory_ptr__to_t_struct$_ExactInputSingleParams_$115_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7105:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7117:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7128:4:5","type":""}],"src":"6957:379:5"},{"body":{"nodeType":"YulBlock","src":"7520:205:5","statements":[{"nodeType":"YulAssignment","src":"7530:27:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7542:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"7553:3:5","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7538:3:5"},"nodeType":"YulFunctionCall","src":"7538:19:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7530:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7691:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7704:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"7715:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7700:3:5"},"nodeType":"YulFunctionCall","src":"7700:17:5"}],"functionName":{"name":"abi_encode_t_struct$_ExactOutputSingleParams_$159_memory_ptr_to_t_struct$_ExactOutputSingleParams_$159_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7567:123:5"},"nodeType":"YulFunctionCall","src":"7567:151:5"},"nodeType":"YulExpressionStatement","src":"7567:151:5"}]},"name":"abi_encode_tuple_t_struct$_ExactOutputSingleParams_$159_memory_ptr__to_t_struct$_ExactOutputSingleParams_$159_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7492:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7504:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7515:4:5","type":""}],"src":"7342:383:5"},{"body":{"nodeType":"YulBlock","src":"7829:124:5","statements":[{"nodeType":"YulAssignment","src":"7839:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7851:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"7862:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7847:3:5"},"nodeType":"YulFunctionCall","src":"7847:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7839:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7919:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7932:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"7943:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7928:3:5"},"nodeType":"YulFunctionCall","src":"7928:17:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7875:43:5"},"nodeType":"YulFunctionCall","src":"7875:71:5"},"nodeType":"YulExpressionStatement","src":"7875:71:5"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7801:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7813:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7824:4:5","type":""}],"src":"7731:222:5"},{"body":{"nodeType":"YulBlock","src":"8004:51:5","statements":[{"nodeType":"YulAssignment","src":"8014:35:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8043:5:5"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"8025:17:5"},"nodeType":"YulFunctionCall","src":"8025:24:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8014:7:5"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7986:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7996:7:5","type":""}],"src":"7959:96:5"},{"body":{"nodeType":"YulBlock","src":"8106:81:5","statements":[{"nodeType":"YulAssignment","src":"8116:65:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8131:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"8138:42:5","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8127:3:5"},"nodeType":"YulFunctionCall","src":"8127:54:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8116:7:5"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8088:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8098:7:5","type":""}],"src":"8061:126:5"},{"body":{"nodeType":"YulBlock","src":"8237:47:5","statements":[{"nodeType":"YulAssignment","src":"8247:31:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8262:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"8269:8:5","type":"","value":"0xffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8258:3:5"},"nodeType":"YulFunctionCall","src":"8258:20:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8247:7:5"}]}]},"name":"cleanup_t_uint24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8219:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8229:7:5","type":""}],"src":"8193:91:5"},{"body":{"nodeType":"YulBlock","src":"8335:32:5","statements":[{"nodeType":"YulAssignment","src":"8345:16:5","value":{"name":"value","nodeType":"YulIdentifier","src":"8356:5:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8345:7:5"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8317:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8327:7:5","type":""}],"src":"8290:77:5"},{"body":{"nodeType":"YulBlock","src":"8452:85:5","statements":[{"nodeType":"YulAssignment","src":"8462:69:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8525:5:5"}],"functionName":{"name":"convert_t_contract$_ISwapRouter_$187_to_t_uint160","nodeType":"YulIdentifier","src":"8475:49:5"},"nodeType":"YulFunctionCall","src":"8475:56:5"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"8462:9:5"}]}]},"name":"convert_t_contract$_ISwapRouter_$187_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8432:5:5","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"8442:9:5","type":""}],"src":"8373:164:5"},{"body":{"nodeType":"YulBlock","src":"8622:53:5","statements":[{"nodeType":"YulAssignment","src":"8632:37:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8663:5:5"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"8645:17:5"},"nodeType":"YulFunctionCall","src":"8645:24:5"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"8632:9:5"}]}]},"name":"convert_t_contract$_ISwapRouter_$187_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8602:5:5","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"8612:9:5","type":""}],"src":"8543:132:5"},{"body":{"nodeType":"YulBlock","src":"8724:79:5","statements":[{"body":{"nodeType":"YulBlock","src":"8781:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8790:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8793:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8783:6:5"},"nodeType":"YulFunctionCall","src":"8783:12:5"},"nodeType":"YulExpressionStatement","src":"8783:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8747:5:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8772:5:5"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"8754:17:5"},"nodeType":"YulFunctionCall","src":"8754:24:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8744:2:5"},"nodeType":"YulFunctionCall","src":"8744:35:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8737:6:5"},"nodeType":"YulFunctionCall","src":"8737:43:5"},"nodeType":"YulIf","src":"8734:2:5"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8717:5:5","type":""}],"src":"8681:122:5"},{"body":{"nodeType":"YulBlock","src":"8851:78:5","statements":[{"body":{"nodeType":"YulBlock","src":"8907:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8916:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8919:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8909:6:5"},"nodeType":"YulFunctionCall","src":"8909:12:5"},"nodeType":"YulExpressionStatement","src":"8909:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8874:5:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8898:5:5"}],"functionName":{"name":"cleanup_t_uint24","nodeType":"YulIdentifier","src":"8881:16:5"},"nodeType":"YulFunctionCall","src":"8881:23:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8871:2:5"},"nodeType":"YulFunctionCall","src":"8871:34:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8864:6:5"},"nodeType":"YulFunctionCall","src":"8864:42:5"},"nodeType":"YulIf","src":"8861:2:5"}]},"name":"validator_revert_t_uint24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8844:5:5","type":""}],"src":"8809:120:5"},{"body":{"nodeType":"YulBlock","src":"8978:79:5","statements":[{"body":{"nodeType":"YulBlock","src":"9035:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9044:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9047:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9037:6:5"},"nodeType":"YulFunctionCall","src":"9037:12:5"},"nodeType":"YulExpressionStatement","src":"9037:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9001:5:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9026:5:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9008:17:5"},"nodeType":"YulFunctionCall","src":"9008:24:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8998:2:5"},"nodeType":"YulFunctionCall","src":"8998:35:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8991:6:5"},"nodeType":"YulFunctionCall","src":"8991:43:5"},"nodeType":"YulIf","src":"8988:2:5"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8971:5:5","type":""}],"src":"8935:122:5"}]},"contents":"{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint24(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint24(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_addresst_uint24(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint24(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint24(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint24(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_ISwapRouter_$187_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ISwapRouter_$187_to_t_address(value))\n    }\n\n    // struct ISwapRouter.ExactInputSingleParams -> struct ISwapRouter.ExactInputSingleParams\n    function abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // tokenIn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenOut\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // deadline\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amountIn\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // amountOutMinimum\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // sqrtPriceLimitX96\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint160_to_t_uint160(memberValue0, add(pos, 0xe0))\n        }\n\n    }\n\n    // struct ISwapRouter.ExactOutputSingleParams -> struct ISwapRouter.ExactOutputSingleParams\n    function abi_encode_t_struct$_ExactOutputSingleParams_$159_memory_ptr_to_t_struct$_ExactOutputSingleParams_$159_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // tokenIn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenOut\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // deadline\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amountOut\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // amountInMaximum\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // sqrtPriceLimitX96\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint160_to_t_uint160(memberValue0, add(pos, 0xe0))\n        }\n\n    }\n\n    function abi_encode_t_uint160_to_t_uint160(value, pos) {\n        mstore(pos, cleanup_t_uint160(value))\n    }\n\n    function abi_encode_t_uint24_to_t_uint24(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_ISwapRouter_$187__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ISwapRouter_$187_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_struct$_ExactInputSingleParams_$115_memory_ptr__to_t_struct$_ExactInputSingleParams_$115_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_struct$_ExactOutputSingleParams_$159_memory_ptr__to_t_struct$_ExactOutputSingleParams_$159_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_struct$_ExactOutputSingleParams_$159_memory_ptr_to_t_struct$_ExactOutputSingleParams_$159_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_ISwapRouter_$187_to_t_address(value) -> converted {\n        converted := convert_t_contract$_ISwapRouter_$187_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISwapRouter_$187_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint24(value) {\n        if iszero(eq(value, cleanup_t_uint24(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":5,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"365":[{"length":32,"start":533},{"length":32,"start":729},{"length":32,"start":911},{"length":32,"start":1005},{"length":32,"start":1240},{"length":32,"start":1445}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBD13338C GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xBD13338C EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xDF2133B3 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0xE0BAB4C4 EQ PUSH2 0x183 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x484F4EA9 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x4AA4A4FC EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x4C840BEF EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0xE7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB3 PUSH2 0x1B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD1 PUSH2 0x1D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDE SWAP2 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEF PUSH2 0x1E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFC SWAP2 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0xCAC JUMP JUMPDEST PUSH2 0x201 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0xF79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x38D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0xF26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0xD0F JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0xF79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH2 0x5F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH20 0x4FABB145D64652A948D72533023F6E7A623C7C53 DUP2 JUMP JUMPDEST PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 DUP2 JUMP JUMPDEST PUSH20 0xDFD5293D8E347DFE59E90EFD55B2956A1343963D DUP2 JUMP JUMPDEST PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20F DUP5 CALLER ADDRESS DUP9 PUSH2 0x60D JUMP JUMPDEST PUSH2 0x23A DUP5 PUSH32 0x0 DUP8 PUSH2 0x82D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x330 SWAP2 SWAP1 PUSH2 0xF41 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x34A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x35E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x382 SWAP2 SWAP1 PUSH2 0xC83 JUMP JUMPDEST SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D3 PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F CALLER ADDRESS DUP7 PUSH2 0x60D JUMP JUMPDEST PUSH2 0x412 PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F PUSH32 0x0 DUP6 PUSH2 0x82D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDB3E2198 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52F SWAP2 SWAP1 PUSH2 0xF5D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x549 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x55D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x581 SWAP2 SWAP1 PUSH2 0xC83 JUMP JUMPDEST SWAP2 POP DUP4 DUP3 LT ISZERO PUSH2 0x5ED JUMPI PUSH2 0x5CB PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F PUSH32 0x0 PUSH1 0x0 PUSH2 0x82D JUMP JUMPDEST PUSH2 0x5EC PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F CALLER DUP5 DUP8 SUB PUSH2 0xA2E JUMP JUMPDEST JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x70C JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x76E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x773 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x7B3 JUMPI POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x7B2 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP JUMPDEST JUMPDEST PUSH2 0x825 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5354460000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x90E JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x8EB JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x970 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x975 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x9B5 JUMPI POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x9B4 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP JUMPDEST JUMPDEST PUSH2 0xA27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5341000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xB0F JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0xAEC JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xB71 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB76 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xBB6 JUMPI POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0xBB5 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP JUMPDEST JUMPDEST PUSH2 0xC28 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5354000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC3E DUP2 PUSH2 0x1003 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC53 DUP2 PUSH2 0x101A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC68 DUP2 PUSH2 0x1031 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC7D DUP2 PUSH2 0x1031 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCA3 DUP5 DUP3 DUP6 ADD PUSH2 0xC6E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xCC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCD0 DUP8 DUP3 DUP9 ADD PUSH2 0xC59 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xCE1 DUP8 DUP3 DUP9 ADD PUSH2 0xC2F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0xCF2 DUP8 DUP3 DUP9 ADD PUSH2 0xC2F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0xD03 DUP8 DUP3 DUP9 ADD PUSH2 0xC44 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD32 DUP7 DUP3 DUP8 ADD PUSH2 0xC59 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xD43 DUP7 DUP3 DUP8 ADD PUSH2 0xC59 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xD54 DUP7 DUP3 DUP8 ADD PUSH2 0xC44 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xD67 DUP2 PUSH2 0xF94 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD76 DUP2 PUSH2 0xF94 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD85 DUP2 PUSH2 0xFDF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0xDA2 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0xD5E JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xDB5 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xD5E JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xDC8 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xEDE JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0xDDB PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0xD5E JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0xDEE PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0xEED JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0xE01 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0xEED JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0xE14 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0xEED JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0xE27 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0xECF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0xE44 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0xD5E JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xE57 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xD5E JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xE6A PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xEDE JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0xE7D PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0xD5E JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0xE90 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0xEED JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0xEA3 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0xEED JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0xEB6 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0xEED JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0xEC9 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0xECF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xED8 DUP2 PUSH2 0xFA6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xEE7 DUP2 PUSH2 0xFC6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xEF6 DUP2 PUSH2 0xFD5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF05 DUP2 PUSH2 0xFD5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF20 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD6D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF3B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0xF57 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD8B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0xF73 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF8E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF9F DUP3 PUSH2 0xFA6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFEA DUP3 PUSH2 0xFF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFC DUP3 PUSH2 0xFA6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x100C DUP2 PUSH2 0xF94 JUMP JUMPDEST DUP2 EQ PUSH2 0x1017 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1023 DUP2 PUSH2 0xFC6 JUMP JUMPDEST DUP2 EQ PUSH2 0x102E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x103A DUP2 PUSH2 0xFD5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1045 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 JUMPI 0xC0 JUMPDEST MULMOD 0x1F 0xBC 0xB7 NOT CREATE2 SWAP5 0xE5 0xB5 MOD 0x2C 0xAD 0xE8 0xCA BYTE DUP6 RETURNDATASIZE 0xB4 RETURN ORIGIN PUSH21 0xF40938231D865364736F6C63430007060033000000 ","sourceMap":"225:5277:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1078:73;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;917:74;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1158:84;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;998:73;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1916:1293;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;688:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3845:1654;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;838:72;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1078:73;1109:42;1078:73;:::o;917:74::-;949:42;917:74;:::o;1158:84::-;1200:42;1158:84;:::o;998:73::-;1029:42;998:73;:::o;1916:1293::-;2033:17;2182:78;2214:7;2223:10;2244:4;2251:8;2182:31;:78::i;:::-;2318:66;2345:7;2362:10;2375:8;2318:26;:66::i;:::-;2636:48;2700:352;;;;;;;;2763:7;2700:352;;;;;;2799:8;2700:352;;;;;;2831:7;2700:352;;;;;;2868:10;2700:352;;;;;;2907:15;2700:352;;;;2951:8;2700:352;;;;2996:1;2700:352;;;;3035:1;2700:352;;;;;2636:416;;3139:10;:27;;;3167:6;3139:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3127:47;;3185:16;1916:1293;;;;;;:::o;688:39::-;;;:::o;3845:1654::-;3954:16;4050:80;868:42;4087:10;4107:4;4114:15;4050:31;:80::i;:::-;4360:69;868:42;4400:10;4413:15;4360:26;:69::i;:::-;4442:49;4507:361;;;;;;;;868:42;4507:361;;;;;;949:42;4507:361;;;;;;4632:7;4507:361;;;;;;4669:10;4507:361;;;;;;4708:15;4507:361;;;;4753:9;4507:361;;;;4798:15;4507:361;;;;4851:1;4507:361;;;;;4442:426;;4995:10;:28;;;5024:6;4995:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4984:47;;5306:15;5295:8;:26;5291:201;;;5338:55;868:42;5378:10;5391:1;5338:26;:55::i;:::-;5408:72;868:42;5441:10;5471:8;5453:15;:26;5408:27;:72::i;:::-;5291:201;3845:1654;;;;;;:::o;838:72::-;868:42;838:72;:::o;561:358:3:-;701:12;715:17;748:5;:10;;782:28;;;812:4;818:2;822:5;759:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;748:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;700:129;;;;847:7;:57;;;;;874:1;859:4;:11;:16;:44;;;;890:4;879:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;859:44;847:57;839:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;561:358;;;;;;:::o;1873:307::-;1986:12;2000:17;2021:5;:10;;2055:23;;;2080:2;2084:5;2032:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1985:106;;;;2109:7;:57;;;;;2136:1;2121:4;:11;:16;:44;;;;2152:4;2141:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2121:44;2109:57;2101:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1873:307;;;;;:::o;1211:309::-;1325:12;1339:17;1360:5;:10;;1394:24;;;1420:2;1424:5;1371:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1360:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1324:107;;;;1449:7;:57;;;;;1476:1;1461:4;:11;:16;:44;;;;1492:4;1481:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1461:44;1449:57;1441:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1211:309;;;;;:::o;7:139:5:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;;235:6;222:20;213:29;;251:32;277:5;251:32;:::i;:::-;203:86;;;;:::o;295:139::-;;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;347:87;;;;:::o;440:143::-;;528:6;522:13;513:22;;544:33;571:5;544:33;:::i;:::-;503:80;;;;:::o;589:284::-;;708:2;696:9;687:7;683:23;679:32;676:2;;;724:1;721;714:12;676:2;767:1;792:64;848:7;839:6;828:9;824:22;792:64;:::i;:::-;782:74;;738:128;666:207;;;;:::o;879:696::-;;;;;1037:3;1025:9;1016:7;1012:23;1008:33;1005:2;;;1054:1;1051;1044:12;1005:2;1097:1;1122:53;1167:7;1158:6;1147:9;1143:22;1122:53;:::i;:::-;1112:63;;1068:117;1224:2;1250:53;1295:7;1286:6;1275:9;1271:22;1250:53;:::i;:::-;1240:63;;1195:118;1352:2;1378:53;1423:7;1414:6;1403:9;1399:22;1378:53;:::i;:::-;1368:63;;1323:118;1480:2;1506:52;1550:7;1541:6;1530:9;1526:22;1506:52;:::i;:::-;1496:62;;1451:117;995:580;;;;;;;:::o;1581:550::-;;;;1722:2;1710:9;1701:7;1697:23;1693:32;1690:2;;;1738:1;1735;1728:12;1690:2;1781:1;1806:53;1851:7;1842:6;1831:9;1827:22;1806:53;:::i;:::-;1796:63;;1752:117;1908:2;1934:53;1979:7;1970:6;1959:9;1955:22;1934:53;:::i;:::-;1924:63;;1879:118;2036:2;2062:52;2106:7;2097:6;2086:9;2082:22;2062:52;:::i;:::-;2052:62;;2007:117;1680:451;;;;;:::o;2137:108::-;2214:24;2232:5;2214:24;:::i;:::-;2209:3;2202:37;2192:53;;:::o;2251:118::-;2338:24;2356:5;2338:24;:::i;:::-;2333:3;2326:37;2316:53;;:::o;2375:169::-;2481:56;2531:5;2481:56;:::i;:::-;2476:3;2469:69;2459:85;;:::o;2644:1623::-;2819:6;2814:3;2810:16;2911:4;2904:5;2900:16;2894:23;2930:63;2987:4;2982:3;2978:14;2964:12;2930:63;:::i;:::-;2836:167;3089:4;3082:5;3078:16;3072:23;3108:63;3165:4;3160:3;3156:14;3142:12;3108:63;:::i;:::-;3013:168;3262:4;3255:5;3251:16;3245:23;3281:61;3336:4;3331:3;3327:14;3313:12;3281:61;:::i;:::-;3191:161;3439:4;3432:5;3428:16;3422:23;3458:63;3515:4;3510:3;3506:14;3492:12;3458:63;:::i;:::-;3362:169;3617:4;3610:5;3606:16;3600:23;3636:63;3693:4;3688:3;3684:14;3670:12;3636:63;:::i;:::-;3541:168;3795:4;3788:5;3784:16;3778:23;3814:63;3871:4;3866:3;3862:14;3848:12;3814:63;:::i;:::-;3719:168;3981:4;3974:5;3970:16;3964:23;4000:63;4057:4;4052:3;4048:14;4034:12;4000:63;:::i;:::-;3897:176;4168:4;4161:5;4157:16;4151:23;4187:63;4244:4;4239:3;4235:14;4221:12;4187:63;:::i;:::-;4083:177;2788:1479;;;:::o;4369:1625::-;4546:6;4541:3;4537:16;4638:4;4631:5;4627:16;4621:23;4657:63;4714:4;4709:3;4705:14;4691:12;4657:63;:::i;:::-;4563:167;4816:4;4809:5;4805:16;4799:23;4835:63;4892:4;4887:3;4883:14;4869:12;4835:63;:::i;:::-;4740:168;4989:4;4982:5;4978:16;4972:23;5008:61;5063:4;5058:3;5054:14;5040:12;5008:61;:::i;:::-;4918:161;5166:4;5159:5;5155:16;5149:23;5185:63;5242:4;5237:3;5233:14;5219:12;5185:63;:::i;:::-;5089:169;5344:4;5337:5;5333:16;5327:23;5363:63;5420:4;5415:3;5411:14;5397:12;5363:63;:::i;:::-;5268:168;5523:4;5516:5;5512:16;5506:23;5542:63;5599:4;5594:3;5590:14;5576:12;5542:63;:::i;:::-;5446:169;5708:4;5701:5;5697:16;5691:23;5727:63;5784:4;5779:3;5775:14;5761:12;5727:63;:::i;:::-;5625:175;5895:4;5888:5;5884:16;5878:23;5914:63;5971:4;5966:3;5962:14;5948:12;5914:63;:::i;:::-;5810:177;4515:1479;;;:::o;6000:108::-;6077:24;6095:5;6077:24;:::i;:::-;6072:3;6065:37;6055:53;;:::o;6114:105::-;6189:23;6206:5;6189:23;:::i;:::-;6184:3;6177:36;6167:52;;:::o;6225:108::-;6302:24;6320:5;6302:24;:::i;:::-;6297:3;6290:37;6280:53;;:::o;6339:118::-;6426:24;6444:5;6426:24;:::i;:::-;6421:3;6414:37;6404:53;;:::o;6463:222::-;;6594:2;6583:9;6579:18;6571:26;;6607:71;6675:1;6664:9;6660:17;6651:6;6607:71;:::i;:::-;6561:124;;;;:::o;6691:260::-;;6841:2;6830:9;6826:18;6818:26;;6854:90;6941:1;6930:9;6926:17;6917:6;6854:90;:::i;:::-;6808:143;;;;:::o;6957:379::-;;7166:3;7155:9;7151:19;7143:27;;7180:149;7326:1;7315:9;7311:17;7302:6;7180:149;:::i;:::-;7133:203;;;;:::o;7342:383::-;;7553:3;7542:9;7538:19;7530:27;;7567:151;7715:1;7704:9;7700:17;7691:6;7567:151;:::i;:::-;7520:205;;;;:::o;7731:222::-;;7862:2;7851:9;7847:18;7839:26;;7875:71;7943:1;7932:9;7928:17;7919:6;7875:71;:::i;:::-;7829:124;;;;:::o;7959:96::-;;8025:24;8043:5;8025:24;:::i;:::-;8014:35;;8004:51;;;:::o;8061:126::-;;8138:42;8131:5;8127:54;8116:65;;8106:81;;;:::o;8193:91::-;;8269:8;8262:5;8258:20;8247:31;;8237:47;;;:::o;8290:77::-;;8356:5;8345:16;;8335:32;;;:::o;8373:164::-;;8475:56;8525:5;8475:56;:::i;:::-;8462:69;;8452:85;;;:::o;8543:132::-;;8645:24;8663:5;8645:24;:::i;:::-;8632:37;;8622:53;;;:::o;8681:122::-;8754:24;8772:5;8754:24;:::i;:::-;8747:5;8744:35;8734:2;;8793:1;8790;8783:12;8734:2;8724:79;:::o;8809:120::-;8881:23;8898:5;8881:23;:::i;:::-;8874:5;8871:34;8861:2;;8919:1;8916;8909:12;8861:2;8851:78;:::o;8935:122::-;9008:24;9026:5;9008:24;:::i;:::-;9001:5;8998:35;8988:2;;9047:1;9044;9037:12;8988:2;8978:79;:::o"},"methodIdentifiers":{"BINANCE_ADDRESS()":"4c840bef","BUSD()":"484f4ea9","DAI()":"e0bab4c4","USDC()":"89a30271","WETH9()":"4aa4a4fc","swapExactInputSingle(uint256,address,address,uint24)":"bd13338c","swapExactOutputSingle(uint256,uint256,uint24)":"df2133b3","swapRouter()":"c31c9c07"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"_swapRouter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BINANCE_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BUSD\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DAI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"poolFee\",\"type\":\"uint24\"}],\"name\":\"swapExactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"poolFee\",\"type\":\"uint24\"}],\"name\":\"swapExactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"swapExactInputSingle(uint256,address,address,uint24)\":{\"details\":\"The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\",\"params\":{\"amountIn\":\"The exact amount of DAI that will be swapped for WETH9.\"},\"returns\":{\"amountOut\":\"The amount of WETH9 received.\"}},\"swapExactOutputSingle(uint256,uint256,uint24)\":{\"details\":\"The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable, the calling address will need to approve for a slightly higher amount, anticipating some variance.\",\"params\":{\"amountInMaximum\":\"The amount of DAI we are willing to spend to receive the specified amount of WETH9.\",\"amountOut\":\"The exact amount of WETH9 to receive from the swap.\"},\"returns\":{\"amountIn\":\"The amount of DAI actually spent in the swap.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"swapExactInputSingle(uint256,address,address,uint24)\":{\"notice\":\"swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9 using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router.\"},\"swapExactOutputSingle(uint256,uint256,uint24)\":{\"notice\":\"swapExactOutputSingle swaps a minimum possible amount of DAI for a fixed amount of WETH.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/swapDAI.sol\":\"SwapDAI\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbd74f587ab9b9711801baf667db1426e4a03fd2d7f15af33e0e0d0394e7cef76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d0913dfbfce90d170df0d496ad7596c0778518e5fa7aba6c32562522546f66b\",\"dweb:/ipfs/QmR6B8nLj2PJf5e1JWD9Nk7ErkAwkqUwadCnvE82FJr1RU\"]},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]},\"contracts/swapDAI.sol\":{\"keccak256\":\"0x17c400c49ce844d8e4f65b4c543616152c404444f26997c8e3712f9f6b80f7f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f319a79c6b361578635bbfb8dc6b6d3f7c5235dc0f3010da0635a307c559b617\",\"dweb:/ipfs/QmWxoEmA9JeQQzrHbkRUDsyKtaJVpS2i12eJaXyE5fTfym\"]}},\"version\":1}"}}}}}